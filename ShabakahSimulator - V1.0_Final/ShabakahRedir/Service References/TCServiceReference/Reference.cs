//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShabakahRedir.TCServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebMethodResults", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.UserConfigurationSequenceNumberResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SynchronizePanelUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetAvailableUserSlotsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.ArmSystemResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.DisarmSystemResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetZonesListInStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetZoneListInStateWithConsoleInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.ReadConsoleDisplayResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.PanelToCommitInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetSupportedZwaveFeaturesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumberResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetPanelLanguaageCapabilityResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetArmingModesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.ImportZoneInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetZoneInformationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.PanelFeatureSet2Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.TCServiceInstanceStatusResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SynchronizeSecurityPanelResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetAutomationNetworkStatusResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetNumberOfAutomationDeviceInStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetAutomationDeviceListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetAllAutomationDeviceStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetGeneralSwitchInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetZWaveSwitchInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetSwitchCurrentStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetSwitchStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.RenameSwitchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetGeneralLockInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetIndividualLockInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetLockCurrentStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetLockStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.RenameLockResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetGeneralThermostatInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetIndividualThermostatInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetThermostatCurrentStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetThermostatCurrentStateExResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetThermostatStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.RenameThermostatResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetSceneConfigurationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetSceneResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetSceneResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.RunSceneResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.DeleteSceneResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetSceneNameResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetSceneNameResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetRuleConfigurationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.DeleteRuleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetRuleInformationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetRuleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetRuleNameResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetRuleNameResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetScheduleConfigurationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.DeleteScheduleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetScheduleInformationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetScheduleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetTemperatureScheduleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SetTemperatureScheduleResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetUserBySlotResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SaveUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.DeleteUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetUserSlotRangeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetAuthorityLevelConfigurationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SmartActionConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SmartActionNameResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SmartActionStateResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SmartActionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetDeviceLevelResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetZoneProgrammingCapabilityResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetEntryDelaysResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetPanelSoftwareVersionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetCustomArmConfigResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetSupportedChimesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.GetUserAdminAuthorityLevelResult))]
    public partial class WebMethodResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserConfigurationSequenceNumberResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class UserConfigurationSequenceNumberResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserConfigurationSequenceNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserConfigurationSequenceNumber {
            get {
                return this.UserConfigurationSequenceNumberField;
            }
            set {
                if ((this.UserConfigurationSequenceNumberField.Equals(value) != true)) {
                    this.UserConfigurationSequenceNumberField = value;
                    this.RaisePropertyChanged("UserConfigurationSequenceNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynchronizePanelUserResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SynchronizePanelUserResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAvailableUserSlotsResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetAvailableUserSlotsResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.UserSlots AvailableSlotsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.UserSlots AvailableSlots {
            get {
                return this.AvailableSlotsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableSlotsField, value) != true)) {
                    this.AvailableSlotsField = value;
                    this.RaisePropertyChanged("AvailableSlots");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmSystemResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class ArmSystemResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultStatus {
            get {
                return this.ResultStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultStatusField, value) != true)) {
                    this.ResultStatusField = value;
                    this.RaisePropertyChanged("ResultStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisarmSystemResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class DisarmSystemResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultStatus {
            get {
                return this.ResultStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultStatusField, value) != true)) {
                    this.ResultStatusField = value;
                    this.RaisePropertyChanged("ResultStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZonesListInStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetZonesListInStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneStatusInfo[] ZoneStatusInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneStatusInfo[] ZoneStatusInfo {
            get {
                return this.ZoneStatusInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneStatusInfoField, value) != true)) {
                    this.ZoneStatusInfoField = value;
                    this.RaisePropertyChanged("ZoneStatusInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZoneListInStateWithConsoleInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetZoneListInStateWithConsoleInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneStatusListWithConsoleinfoObject ZoneStatusWithConsoleInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneStatusListWithConsoleinfoObject ZoneStatusWithConsoleInfo {
            get {
                return this.ZoneStatusWithConsoleInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneStatusWithConsoleInfoField, value) != true)) {
                    this.ZoneStatusWithConsoleInfoField = value;
                    this.RaisePropertyChanged("ZoneStatusWithConsoleInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadConsoleDisplayResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class ReadConsoleDisplayResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ConsoleInfo DisplayStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ConsoleInfo DisplayStatus {
            get {
                return this.DisplayStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayStatusField, value) != true)) {
                    this.DisplayStatusField = value;
                    this.RaisePropertyChanged("DisplayStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelToCommitInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class PanelToCommitInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.PanelToCommitInfo PanelToCommitInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.PanelToCommitInfo PanelToCommitInfo {
            get {
                return this.PanelToCommitInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelToCommitInfoField, value) != true)) {
                    this.PanelToCommitInfoField = value;
                    this.RaisePropertyChanged("PanelToCommitInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSupportedZwaveFeaturesResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetSupportedZwaveFeaturesResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZwaveConfigInfo ZwaveConfigInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZwaveConfigInfo ZwaveConfigInfo {
            get {
                return this.ZwaveConfigInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZwaveConfigInfoField, value) != true)) {
                    this.ZwaveConfigInfoField = value;
                    this.RaisePropertyChanged("ZwaveConfigInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZwaveConfigSequenceNumberResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetZwaveConfigSequenceNumberResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumber GetZwaveConfigSequenceNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumber GetZwaveConfigSequenceNumber {
            get {
                return this.GetZwaveConfigSequenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GetZwaveConfigSequenceNumberField, value) != true)) {
                    this.GetZwaveConfigSequenceNumberField = value;
                    this.RaisePropertyChanged("GetZwaveConfigSequenceNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPanelLanguaageCapabilityResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetPanelLanguaageCapabilityResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.PanelLanguageCapability LanguageConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.PanelLanguageCapability LanguageConfiguration {
            get {
                return this.LanguageConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageConfigurationField, value) != true)) {
                    this.LanguageConfigurationField = value;
                    this.RaisePropertyChanged("LanguageConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetArmingModesResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetArmingModesResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ArmingModes ArmingModesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ArmingModes ArmingModes {
            get {
                return this.ArmingModesField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmingModesField, value) != true)) {
                    this.ArmingModesField = value;
                    this.RaisePropertyChanged("ArmingModes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportZoneInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class ImportZoneInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneInformation[] ZoneInfoListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneInformation[] ZoneInfoList {
            get {
                return this.ZoneInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneInfoListField, value) != true)) {
                    this.ZoneInfoListField = value;
                    this.RaisePropertyChanged("ZoneInfoList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZoneInformationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetZoneInformationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneInformation ZoneInformationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneInformation ZoneInformation {
            get {
                return this.ZoneInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneInformationField, value) != true)) {
                    this.ZoneInformationField = value;
                    this.RaisePropertyChanged("ZoneInformation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelFeatureSet2Result", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class PanelFeatureSet2Result : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.PanelFeatureSet2Info PanelFeatureSet2InfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.PanelFeatureSet2Info PanelFeatureSet2Info {
            get {
                return this.PanelFeatureSet2InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelFeatureSet2InfoField, value) != true)) {
                    this.PanelFeatureSet2InfoField = value;
                    this.RaisePropertyChanged("PanelFeatureSet2Info");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TCServiceInstanceStatusResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class TCServiceInstanceStatusResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsShutDownInProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenSessionCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShutDownInProgress {
            get {
                return this.IsShutDownInProgressField;
            }
            set {
                if ((this.IsShutDownInProgressField.Equals(value) != true)) {
                    this.IsShutDownInProgressField = value;
                    this.RaisePropertyChanged("IsShutDownInProgress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenSessionCount {
            get {
                return this.OpenSessionCountField;
            }
            set {
                if ((this.OpenSessionCountField.Equals(value) != true)) {
                    this.OpenSessionCountField = value;
                    this.RaisePropertyChanged("OpenSessionCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynchronizeSecurityPanelResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SynchronizeSecurityPanelResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAutomationNetworkStatusResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetAutomationNetworkStatusResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationNetworkStatus NetworkStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationNetworkStatus NetworkStatus {
            get {
                return this.NetworkStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkStatusField, value) != true)) {
                    this.NetworkStatusField = value;
                    this.RaisePropertyChanged("NetworkStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNumberOfAutomationDeviceInStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetNumberOfAutomationDeviceInStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationDeviceCountInfoList DeviceInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationDeviceCountInfoList DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAutomationDeviceListResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetAutomationDeviceListResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.IndividualDeviceStateInfo[] DeviceInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.IndividualDeviceStateInfo[] DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAutomationDeviceStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetAllAutomationDeviceStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.IndividualDeviceStateInfo[] DeviceInfoListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.IndividualDeviceStateInfo[] DeviceInfoList {
            get {
                return this.DeviceInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoListField, value) != true)) {
                    this.DeviceInfoListField = value;
                    this.RaisePropertyChanged("DeviceInfoList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeneralSwitchInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetGeneralSwitchInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SwitchConfiguration SwitchConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SwitchConfiguration SwitchConfiguration {
            get {
                return this.SwitchConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchConfigurationField, value) != true)) {
                    this.SwitchConfigurationField = value;
                    this.RaisePropertyChanged("SwitchConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZWaveSwitchInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetZWaveSwitchInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SwitchInfo SwitchInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SwitchInfo SwitchInfo {
            get {
                return this.SwitchInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchInfoField, value) != true)) {
                    this.SwitchInfoField = value;
                    this.RaisePropertyChanged("SwitchInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSwitchCurrentStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetSwitchCurrentStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SwitchStateInfo[] SwitchStateInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SwitchStateInfo[] SwitchStateInfo {
            get {
                return this.SwitchStateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchStateInfoField, value) != true)) {
                    this.SwitchStateInfoField = value;
                    this.RaisePropertyChanged("SwitchStateInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSwitchStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetSwitchStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RenameSwitchResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class RenameSwitchResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeneralLockInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetGeneralLockInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.LockConfiguration LockConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.LockConfiguration LockConfiguration {
            get {
                return this.LockConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.LockConfigurationField, value) != true)) {
                    this.LockConfigurationField = value;
                    this.RaisePropertyChanged("LockConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetIndividualLockInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetIndividualLockInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.LockInfo LockInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.LockInfo LockInfo {
            get {
                return this.LockInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.LockInfoField, value) != true)) {
                    this.LockInfoField = value;
                    this.RaisePropertyChanged("LockInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLockCurrentStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetLockCurrentStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.LockInfo[] LockInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.LockInfo[] LockInfo {
            get {
                return this.LockInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.LockInfoField, value) != true)) {
                    this.LockInfoField = value;
                    this.RaisePropertyChanged("LockInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetLockStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetLockStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RenameLockResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class RenameLockResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeneralThermostatInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetGeneralThermostatInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatConfiguration ThermostatConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatConfiguration ThermostatConfiguration {
            get {
                return this.ThermostatConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatConfigurationField, value) != true)) {
                    this.ThermostatConfigurationField = value;
                    this.RaisePropertyChanged("ThermostatConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetIndividualThermostatInfoResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetIndividualThermostatInfoResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatInfo ThermostatInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatInfo ThermostatInfo {
            get {
                return this.ThermostatInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatInfoField, value) != true)) {
                    this.ThermostatInfoField = value;
                    this.RaisePropertyChanged("ThermostatInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetThermostatCurrentStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetThermostatCurrentStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatStateInfo[] ThermostatStateInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatStateInfo[] ThermostatStateInfo {
            get {
                return this.ThermostatStateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatStateInfoField, value) != true)) {
                    this.ThermostatStateInfoField = value;
                    this.RaisePropertyChanged("ThermostatStateInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetThermostatCurrentStateExResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetThermostatCurrentStateExResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatStateExInfo[] ThermostatStateInfoExField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatStateExInfo[] ThermostatStateInfoEx {
            get {
                return this.ThermostatStateInfoExField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatStateInfoExField, value) != true)) {
                    this.ThermostatStateInfoExField = value;
                    this.RaisePropertyChanged("ThermostatStateInfoEx");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetThermostatStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetThermostatStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RenameThermostatResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class RenameThermostatResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSceneConfigurationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetSceneConfigurationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SceneConfiguration SceneConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SceneConfiguration SceneConfiguration {
            get {
                return this.SceneConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.SceneConfigurationField, value) != true)) {
                    this.SceneConfigurationField = value;
                    this.RaisePropertyChanged("SceneConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSceneResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetSceneResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetSceneindexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetSceneindex {
            get {
                return this.SetSceneindexField;
            }
            set {
                if ((this.SetSceneindexField.Equals(value) != true)) {
                    this.SetSceneindexField = value;
                    this.RaisePropertyChanged("SetSceneindex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSceneResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetSceneResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.Scene SceneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.Scene Scene {
            get {
                return this.SceneField;
            }
            set {
                if ((object.ReferenceEquals(this.SceneField, value) != true)) {
                    this.SceneField = value;
                    this.RaisePropertyChanged("Scene");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunSceneResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class RunSceneResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteSceneResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class DeleteSceneResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSceneNameResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetSceneNameResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSceneNameResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetSceneNameResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleConfigurationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetRuleConfigurationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.RuleConfiguration RuleConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.RuleConfiguration RuleConfiguration {
            get {
                return this.RuleConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleConfigurationField, value) != true)) {
                    this.RuleConfigurationField = value;
                    this.RaisePropertyChanged("RuleConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteRuleResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class DeleteRuleResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleInformationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetRuleInformationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.EventAction RuleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.EventAction Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetRuleResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetRuleResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleNameResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetRuleNameResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetRuleNameResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetRuleNameResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetScheduleConfigurationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetScheduleConfigurationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ScheduleConfiguration ScheduleConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ScheduleConfiguration ScheduleConfiguration {
            get {
                return this.ScheduleConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleConfigurationField, value) != true)) {
                    this.ScheduleConfigurationField = value;
                    this.RaisePropertyChanged("ScheduleConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteScheduleResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class DeleteScheduleResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetScheduleInformationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetScheduleInformationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.Schedule ScheduleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.Schedule Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetScheduleResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetScheduleResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTemperatureScheduleResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetTemperatureScheduleResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.TemperatureSchedule TemperatureScheduleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.TemperatureSchedule TemperatureSchedule {
            get {
                return this.TemperatureScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureScheduleField, value) != true)) {
                    this.TemperatureScheduleField = value;
                    this.RaisePropertyChanged("TemperatureSchedule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetTemperatureScheduleResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SetTemperatureScheduleResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserBySlotResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetUserBySlotResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.PanelUser[] PanelUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.PanelUser[] PanelUser {
            get {
                return this.PanelUserField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelUserField, value) != true)) {
                    this.PanelUserField = value;
                    this.RaisePropertyChanged("PanelUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveUserResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class SaveUserResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.PanelUser PanelUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.PanelUser PanelUser {
            get {
                return this.PanelUserField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelUserField, value) != true)) {
                    this.PanelUserField = value;
                    this.RaisePropertyChanged("PanelUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteUserResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class DeleteUserResult : ShabakahRedir.TCServiceReference.WebMethodResults {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserSlotRangeResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetUserSlotRangeResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SlotRange UserSlotRangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SlotRange UserSlotRange {
            get {
                return this.UserSlotRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSlotRangeField, value) != true)) {
                    this.UserSlotRangeField = value;
                    this.RaisePropertyChanged("UserSlotRange");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAuthorityLevelConfigurationResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetAuthorityLevelConfigurationResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDifferentialAuthoritySupportedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDifferentialAuthoritySupported {
            get {
                return this.IsDifferentialAuthoritySupportedField;
            }
            set {
                if ((this.IsDifferentialAuthoritySupportedField.Equals(value) != true)) {
                    this.IsDifferentialAuthoritySupportedField = value;
                    this.RaisePropertyChanged("IsDifferentialAuthoritySupported");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartActionConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartActionConfiguration : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentSmartActionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumDevicesPerSmartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumNameLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumSmartActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartActionEditingEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SmartActionNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnicodeNameSupportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentSmartActionCount {
            get {
                return this.CurrentSmartActionCountField;
            }
            set {
                if ((this.CurrentSmartActionCountField.Equals(value) != true)) {
                    this.CurrentSmartActionCountField = value;
                    this.RaisePropertyChanged("CurrentSmartActionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumDevicesPerSmartAction {
            get {
                return this.MaximumDevicesPerSmartActionField;
            }
            set {
                if ((this.MaximumDevicesPerSmartActionField.Equals(value) != true)) {
                    this.MaximumDevicesPerSmartActionField = value;
                    this.RaisePropertyChanged("MaximumDevicesPerSmartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumNameLength {
            get {
                return this.MaximumNameLengthField;
            }
            set {
                if ((this.MaximumNameLengthField.Equals(value) != true)) {
                    this.MaximumNameLengthField = value;
                    this.RaisePropertyChanged("MaximumNameLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumSmartActions {
            get {
                return this.MaximumSmartActionsField;
            }
            set {
                if ((this.MaximumSmartActionsField.Equals(value) != true)) {
                    this.MaximumSmartActionsField = value;
                    this.RaisePropertyChanged("MaximumSmartActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartActionEditingEnabled {
            get {
                return this.SmartActionEditingEnabledField;
            }
            set {
                if ((this.SmartActionEditingEnabledField.Equals(value) != true)) {
                    this.SmartActionEditingEnabledField = value;
                    this.RaisePropertyChanged("SmartActionEditingEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SmartActionNumbers {
            get {
                return this.SmartActionNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartActionNumbersField, value) != true)) {
                    this.SmartActionNumbersField = value;
                    this.RaisePropertyChanged("SmartActionNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnicodeNameSupport {
            get {
                return this.UnicodeNameSupportField;
            }
            set {
                if ((this.UnicodeNameSupportField.Equals(value) != true)) {
                    this.UnicodeNameSupportField = value;
                    this.RaisePropertyChanged("UnicodeNameSupport");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartActionNameResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartActionNameResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmartActionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmartActionName {
            get {
                return this.SmartActionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartActionNameField, value) != true)) {
                    this.SmartActionNameField = value;
                    this.RaisePropertyChanged("SmartActionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartActionStateResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartActionStateResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.eSmartActionState> SmartActionStateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.eSmartActionState> SmartActionState {
            get {
                return this.SmartActionStateField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartActionStateField, value) != true)) {
                    this.SmartActionStateField = value;
                    this.RaisePropertyChanged("SmartActionState");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartActionResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartActionResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SmartAction SmartActionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SmartAction SmartAction {
            get {
                return this.SmartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartActionField, value) != true)) {
                    this.SmartActionField = value;
                    this.RaisePropertyChanged("SmartAction");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDeviceLevelResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.General")]
    [System.SerializableAttribute()]
    public partial class GetDeviceLevelResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.DeviceLevel> DeviceLevelsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.DeviceLevel> DeviceLevels {
            get {
                return this.DeviceLevelsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceLevelsField, value) != true)) {
                    this.DeviceLevelsField = value;
                    this.RaisePropertyChanged("DeviceLevels");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZoneProgrammingCapabilityResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.General")]
    [System.SerializableAttribute()]
    public partial class GetZoneProgrammingCapabilityResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneProgrammingCapability ZoneProgrammingCapabilityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneProgrammingCapability ZoneProgrammingCapability {
            get {
                return this.ZoneProgrammingCapabilityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneProgrammingCapabilityField, value) != true)) {
                    this.ZoneProgrammingCapabilityField = value;
                    this.RaisePropertyChanged("ZoneProgrammingCapability");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEntryDelaysResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.General")]
    [System.SerializableAttribute()]
    public partial class GetEntryDelaysResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryDelay1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EntryDelay2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntryDelay1 {
            get {
                return this.EntryDelay1Field;
            }
            set {
                if ((this.EntryDelay1Field.Equals(value) != true)) {
                    this.EntryDelay1Field = value;
                    this.RaisePropertyChanged("EntryDelay1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EntryDelay2 {
            get {
                return this.EntryDelay2Field;
            }
            set {
                if ((this.EntryDelay2Field.Equals(value) != true)) {
                    this.EntryDelay2Field = value;
                    this.RaisePropertyChanged("EntryDelay2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPanelSoftwareVersionResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.General")]
    [System.SerializableAttribute()]
    public partial class GetPanelSoftwareVersionResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoftwareVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoftwareVersion {
            get {
                return this.SoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SoftwareVersionField, value) != true)) {
                    this.SoftwareVersionField = value;
                    this.RaisePropertyChanged("SoftwareVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCustomArmConfigResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.General")]
    [System.SerializableAttribute()]
    public partial class GetCustomArmConfigResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eArmMode ArmModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ByPassZonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EntryDelayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eArmMode ArmMode {
            get {
                return this.ArmModeField;
            }
            set {
                if ((this.ArmModeField.Equals(value) != true)) {
                    this.ArmModeField = value;
                    this.RaisePropertyChanged("ArmMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ByPassZones {
            get {
                return this.ByPassZonesField;
            }
            set {
                if ((object.ReferenceEquals(this.ByPassZonesField, value) != true)) {
                    this.ByPassZonesField = value;
                    this.RaisePropertyChanged("ByPassZones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EntryDelay {
            get {
                return this.EntryDelayField;
            }
            set {
                if ((this.EntryDelayField.Equals(value) != true)) {
                    this.EntryDelayField = value;
                    this.RaisePropertyChanged("EntryDelay");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSupportedChimesResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData.General")]
    [System.SerializableAttribute()]
    public partial class GetSupportedChimesResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SupportedChimesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SupportedChimes {
            get {
                return this.SupportedChimesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedChimesField, value) != true)) {
                    this.SupportedChimesField = value;
                    this.RaisePropertyChanged("SupportedChimes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserAdminAuthorityLevelResult", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.WebMethodResultsData")]
    [System.SerializableAttribute()]
    public partial class GetUserAdminAuthorityLevelResult : ShabakahRedir.TCServiceReference.WebMethodResults {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredAuthorityLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredAuthorityLevel {
            get {
                return this.RequiredAuthorityLevelField;
            }
            set {
                if ((this.RequiredAuthorityLevelField.Equals(value) != true)) {
                    this.RequiredAuthorityLevelField = value;
                    this.RaisePropertyChanged("RequiredAuthorityLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSlots", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class UserSlots : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] UnUsedSlotsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] UnUsedSlots {
            get {
                return this.UnUsedSlotsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnUsedSlotsField, value) != true)) {
                    this.UnUsedSlotsField = value;
                    this.RaisePropertyChanged("UnUsedSlots");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneStatusInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ZoneStatusInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneID {
            get {
                return this.ZoneIDField;
            }
            set {
                if ((this.ZoneIDField.Equals(value) != true)) {
                    this.ZoneIDField = value;
                    this.RaisePropertyChanged("ZoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneStatus {
            get {
                return this.ZoneStatusField;
            }
            set {
                if ((this.ZoneStatusField.Equals(value) != true)) {
                    this.ZoneStatusField = value;
                    this.RaisePropertyChanged("ZoneStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneStatusListWithConsoleinfoObject", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ZoneStatusListWithConsoleinfoObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ConsoleInfo ConsoleDisplayInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneStatusInfo[] ZonesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ConsoleInfo ConsoleDisplayInfo {
            get {
                return this.ConsoleDisplayInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsoleDisplayInfoField, value) != true)) {
                    this.ConsoleDisplayInfoField = value;
                    this.RaisePropertyChanged("ConsoleDisplayInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneStatusInfo[] Zones {
            get {
                return this.ZonesField;
            }
            set {
                if ((object.ReferenceEquals(this.ZonesField, value) != true)) {
                    this.ZonesField = value;
                    this.RaisePropertyChanged("Zones");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsoleInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ConsoleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LEDStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayLine1 {
            get {
                return this.DisplayLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLine1Field, value) != true)) {
                    this.DisplayLine1Field = value;
                    this.RaisePropertyChanged("DisplayLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayLine2 {
            get {
                return this.DisplayLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLine2Field, value) != true)) {
                    this.DisplayLine2Field = value;
                    this.RaisePropertyChanged("DisplayLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LEDStatus {
            get {
                return this.LEDStatusField;
            }
            set {
                if ((this.LEDStatusField.Equals(value) != true)) {
                    this.LEDStatusField = value;
                    this.RaisePropertyChanged("LEDStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelToCommitInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class PanelToCommitInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommitStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommitStatus {
            get {
                return this.CommitStatusField;
            }
            set {
                if ((this.CommitStatusField.Equals(value) != true)) {
                    this.CommitStatusField = value;
                    this.RaisePropertyChanged("CommitStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZwaveConfigInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ZwaveConfigInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsSchedulingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgrammingFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SupportedDevicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsScheduling {
            get {
                return this.IsSchedulingField;
            }
            set {
                if ((this.IsSchedulingField.Equals(value) != true)) {
                    this.IsSchedulingField = value;
                    this.RaisePropertyChanged("IsScheduling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgrammingFlag {
            get {
                return this.ProgrammingFlagField;
            }
            set {
                if ((this.ProgrammingFlagField.Equals(value) != true)) {
                    this.ProgrammingFlagField = value;
                    this.RaisePropertyChanged("ProgrammingFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SupportedDevices {
            get {
                return this.SupportedDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedDevicesField, value) != true)) {
                    this.SupportedDevicesField = value;
                    this.RaisePropertyChanged("SupportedDevices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetZwaveConfigSequenceNumber", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class GetZwaveConfigSequenceNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelLanguageCapability", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class PanelLanguageCapability : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SupportedLanguagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentLanguage {
            get {
                return this.CurrentLanguageField;
            }
            set {
                if ((this.CurrentLanguageField.Equals(value) != true)) {
                    this.CurrentLanguageField = value;
                    this.RaisePropertyChanged("CurrentLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SupportedLanguages {
            get {
                return this.SupportedLanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedLanguagesField, value) != true)) {
                    this.SupportedLanguagesField = value;
                    this.RaisePropertyChanged("SupportedLanguages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmingModes", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ArmingModes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAwayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCustomArmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasInstantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasNightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasStayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAway {
            get {
                return this.HasAwayField;
            }
            set {
                if ((this.HasAwayField.Equals(value) != true)) {
                    this.HasAwayField = value;
                    this.RaisePropertyChanged("HasAway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCustomArm {
            get {
                return this.HasCustomArmField;
            }
            set {
                if ((this.HasCustomArmField.Equals(value) != true)) {
                    this.HasCustomArmField = value;
                    this.RaisePropertyChanged("HasCustomArm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasInstant {
            get {
                return this.HasInstantField;
            }
            set {
                if ((this.HasInstantField.Equals(value) != true)) {
                    this.HasInstantField = value;
                    this.RaisePropertyChanged("HasInstant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMaximum {
            get {
                return this.HasMaximumField;
            }
            set {
                if ((this.HasMaximumField.Equals(value) != true)) {
                    this.HasMaximumField = value;
                    this.RaisePropertyChanged("HasMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasNight {
            get {
                return this.HasNightField;
            }
            set {
                if ((this.HasNightField.Equals(value) != true)) {
                    this.HasNightField = value;
                    this.RaisePropertyChanged("HasNight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasStay {
            get {
                return this.HasStayField;
            }
            set {
                if ((this.HasStayField.Equals(value) != true)) {
                    this.HasStayField = value;
                    this.RaisePropertyChanged("HasStay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneInformation", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ZoneInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlarmReportEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eZoneApplicationDeviceType ApplicationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChimeEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<ShabakahRedir.TCServiceReference.eZoneCondition, int>[] ChimeSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExclusionEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoopNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartitionIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eZoneSupervisionType SupervisionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<ShabakahRedir.TCServiceReference.eZoneCondition, bool>[] VoiceAnnunciationEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneDeviceType ZoneDeviceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneType ZoneTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlarmReportEnabled {
            get {
                return this.AlarmReportEnabledField;
            }
            set {
                if ((this.AlarmReportEnabledField.Equals(value) != true)) {
                    this.AlarmReportEnabledField = value;
                    this.RaisePropertyChanged("AlarmReportEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eZoneApplicationDeviceType ApplicationType {
            get {
                return this.ApplicationTypeField;
            }
            set {
                if ((this.ApplicationTypeField.Equals(value) != true)) {
                    this.ApplicationTypeField = value;
                    this.RaisePropertyChanged("ApplicationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChimeEnabled {
            get {
                return this.ChimeEnabledField;
            }
            set {
                if ((this.ChimeEnabledField.Equals(value) != true)) {
                    this.ChimeEnabledField = value;
                    this.RaisePropertyChanged("ChimeEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<ShabakahRedir.TCServiceReference.eZoneCondition, int>[] ChimeSelected {
            get {
                return this.ChimeSelectedField;
            }
            set {
                if ((object.ReferenceEquals(this.ChimeSelectedField, value) != true)) {
                    this.ChimeSelectedField = value;
                    this.RaisePropertyChanged("ChimeSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExclusionEnabled {
            get {
                return this.ExclusionEnabledField;
            }
            set {
                if ((this.ExclusionEnabledField.Equals(value) != true)) {
                    this.ExclusionEnabledField = value;
                    this.RaisePropertyChanged("ExclusionEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoopNumber {
            get {
                return this.LoopNumberField;
            }
            set {
                if ((this.LoopNumberField.Equals(value) != true)) {
                    this.LoopNumberField = value;
                    this.RaisePropertyChanged("LoopNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartitionIndex {
            get {
                return this.PartitionIndexField;
            }
            set {
                if ((this.PartitionIndexField.Equals(value) != true)) {
                    this.PartitionIndexField = value;
                    this.RaisePropertyChanged("PartitionIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eZoneSupervisionType SupervisionType {
            get {
                return this.SupervisionTypeField;
            }
            set {
                if ((this.SupervisionTypeField.Equals(value) != true)) {
                    this.SupervisionTypeField = value;
                    this.RaisePropertyChanged("SupervisionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<ShabakahRedir.TCServiceReference.eZoneCondition, bool>[] VoiceAnnunciationEnabled {
            get {
                return this.VoiceAnnunciationEnabledField;
            }
            set {
                if ((object.ReferenceEquals(this.VoiceAnnunciationEnabledField, value) != true)) {
                    this.VoiceAnnunciationEnabledField = value;
                    this.RaisePropertyChanged("VoiceAnnunciationEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneDescription {
            get {
                return this.ZoneDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneDescriptionField, value) != true)) {
                    this.ZoneDescriptionField = value;
                    this.RaisePropertyChanged("ZoneDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneDeviceType ZoneDeviceTypeID {
            get {
                return this.ZoneDeviceTypeIDField;
            }
            set {
                if ((this.ZoneDeviceTypeIDField.Equals(value) != true)) {
                    this.ZoneDeviceTypeIDField = value;
                    this.RaisePropertyChanged("ZoneDeviceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneIndex {
            get {
                return this.ZoneIndexField;
            }
            set {
                if ((this.ZoneIndexField.Equals(value) != true)) {
                    this.ZoneIndexField = value;
                    this.RaisePropertyChanged("ZoneIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneType ZoneTypeID {
            get {
                return this.ZoneTypeIDField;
            }
            set {
                if ((this.ZoneTypeIDField.Equals(value) != true)) {
                    this.ZoneTypeIDField = value;
                    this.RaisePropertyChanged("ZoneTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eZoneApplicationDeviceType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum eZoneApplicationDeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Door = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Window = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MotionSensor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlassBreak = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmokeDetector = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeatSensor = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarbonMonoxideDetector = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Temperature = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flood = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Environmental = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medical = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fire = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Police = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GarageDoor = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneButton = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoButton = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FourButton = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SixButton = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EightButton = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eZoneCondition", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum eZoneCondition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Usage = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eZoneSupervisionType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum eZoneSupervisionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Supervised = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unsupervised = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PanicTriggered = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HighTemperature = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LowTemperature = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Button = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneDeviceType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum ZoneDeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUsed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HardWired = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFMotionOrAuxWire = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        URType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BRType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DIPSwitchTypePollingLoopDevice = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightLoopOfDIPSwitchTypeDevice = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeypadInput = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassPointAccessControl = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VistaKeyDoorStatusMonitor = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VistaKeyRequestToExit = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VistaKeyGeneralPurpose = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODetectorAlarm = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum ZoneType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUsed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryExit1Burglary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryExit2Burglary = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerimeterBurglary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteriorFollowerBurglary = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TroubleDayAlarmNight = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SilentAlarm24Hour = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AudibleAlarm24Hour = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auxilary24Hour = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireWithoutVerification = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteriorDelayBurglary = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PanelLinkSuprvisionOr24HourMonitor = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemotePS = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODetectorAlarm = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medical24Hour = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireWithVerification = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireWaterFlow = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireSupervisory = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trouble24Hour = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStay5800 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmAway5800 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disarm5800 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAlarmResponse = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SilentBurglary = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JiffyLube24Hour = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessPoint = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MLBSupervision = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MomentaryExit = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Keyswitch = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AAVMonitor = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResidentMonitor = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResidentResponse = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoConfirmationResidentMonitor = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoConfirmationResidentResponse = 88,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelFeatureSet2Info", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class PanelFeatureSet2Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutoOnBoardSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOutputSchedulingSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsZwaveSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnicodeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutoOnBoardSupported {
            get {
                return this.IsAutoOnBoardSupportedField;
            }
            set {
                if ((this.IsAutoOnBoardSupportedField.Equals(value) != true)) {
                    this.IsAutoOnBoardSupportedField = value;
                    this.RaisePropertyChanged("IsAutoOnBoardSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOutputSchedulingSupported {
            get {
                return this.IsOutputSchedulingSupportedField;
            }
            set {
                if ((this.IsOutputSchedulingSupportedField.Equals(value) != true)) {
                    this.IsOutputSchedulingSupportedField = value;
                    this.RaisePropertyChanged("IsOutputSchedulingSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsZwaveSupported {
            get {
                return this.IsZwaveSupportedField;
            }
            set {
                if ((this.IsZwaveSupportedField.Equals(value) != true)) {
                    this.IsZwaveSupportedField = value;
                    this.RaisePropertyChanged("IsZwaveSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnicodeType {
            get {
                return this.UnicodeTypeField;
            }
            set {
                if ((this.UnicodeTypeField.Equals(value) != true)) {
                    this.UnicodeTypeField = value;
                    this.RaisePropertyChanged("UnicodeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationNetworkStatus", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class AutomationNetworkStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceStatus {
            get {
                return this.DeviceStatusField;
            }
            set {
                if ((this.DeviceStatusField.Equals(value) != true)) {
                    this.DeviceStatusField = value;
                    this.RaisePropertyChanged("DeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkStatus {
            get {
                return this.NetworkStatusField;
            }
            set {
                if ((this.NetworkStatusField.Equals(value) != true)) {
                    this.NetworkStatusField = value;
                    this.RaisePropertyChanged("NetworkStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationDeviceCountInfoList", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class AutomationDeviceCountInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationDeviceCountInfo[] DeviceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationDeviceCountInfo[] DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceState {
            get {
                return this.DeviceStateField;
            }
            set {
                if ((this.DeviceStateField.Equals(value) != true)) {
                    this.DeviceStateField = value;
                    this.RaisePropertyChanged("DeviceState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationDeviceCountInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class AutomationDeviceCountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationDeviceType DeviceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceCount {
            get {
                return this.DeviceCountField;
            }
            set {
                if ((this.DeviceCountField.Equals(value) != true)) {
                    this.DeviceCountField = value;
                    this.RaisePropertyChanged("DeviceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationDeviceType DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((this.DeviceTypeField.Equals(value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationDeviceType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum AutomationDeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Switch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lock = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thermostat = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndividualDeviceStateInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class IndividualDeviceStateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationDeviceType DeviceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceIndex {
            get {
                return this.DeviceIndexField;
            }
            set {
                if ((this.DeviceIndexField.Equals(value) != true)) {
                    this.DeviceIndexField = value;
                    this.RaisePropertyChanged("DeviceIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceState {
            get {
                return this.DeviceStateField;
            }
            set {
                if ((this.DeviceStateField.Equals(value) != true)) {
                    this.DeviceStateField = value;
                    this.RaisePropertyChanged("DeviceState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationDeviceType DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((this.DeviceTypeField.Equals(value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class SwitchConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerNameCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfStatusFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberofCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgrammedSwitchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwitchNameCapacityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerNameCapacity {
            get {
                return this.ManufacturerNameCapacityField;
            }
            set {
                if ((this.ManufacturerNameCapacityField.Equals(value) != true)) {
                    this.ManufacturerNameCapacityField = value;
                    this.RaisePropertyChanged("ManufacturerNameCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfStatusFields {
            get {
                return this.NumberOfStatusFieldsField;
            }
            set {
                if ((this.NumberOfStatusFieldsField.Equals(value) != true)) {
                    this.NumberOfStatusFieldsField = value;
                    this.RaisePropertyChanged("NumberOfStatusFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberofCategories {
            get {
                return this.NumberofCategoriesField;
            }
            set {
                if ((this.NumberofCategoriesField.Equals(value) != true)) {
                    this.NumberofCategoriesField = value;
                    this.RaisePropertyChanged("NumberofCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgrammedSwitches {
            get {
                return this.ProgrammedSwitchesField;
            }
            set {
                if ((this.ProgrammedSwitchesField.Equals(value) != true)) {
                    this.ProgrammedSwitchesField = value;
                    this.RaisePropertyChanged("ProgrammedSwitches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwitchNameCapacity {
            get {
                return this.SwitchNameCapacityField;
            }
            set {
                if ((this.SwitchNameCapacityField.Equals(value) != true)) {
                    this.SwitchNameCapacityField = value;
                    this.RaisePropertyChanged("SwitchNameCapacity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class SwitchInfo : ShabakahRedir.TCServiceReference.AutomationClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwitchLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwitchStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwitchTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwitchLevel {
            get {
                return this.SwitchLevelField;
            }
            set {
                if ((this.SwitchLevelField.Equals(value) != true)) {
                    this.SwitchLevelField = value;
                    this.RaisePropertyChanged("SwitchLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwitchState {
            get {
                return this.SwitchStateField;
            }
            set {
                if ((this.SwitchStateField.Equals(value) != true)) {
                    this.SwitchStateField = value;
                    this.RaisePropertyChanged("SwitchState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwitchType {
            get {
                return this.SwitchTypeField;
            }
            set {
                if ((this.SwitchTypeField.Equals(value) != true)) {
                    this.SwitchTypeField = value;
                    this.RaisePropertyChanged("SwitchType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationClass", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.LockInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.ThermostatInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SwitchInfo))]
    public partial class AutomationClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceStatus {
            get {
                return this.DeviceStatusField;
            }
            set {
                if ((this.DeviceStatusField.Equals(value) != true)) {
                    this.DeviceStatusField = value;
                    this.RaisePropertyChanged("DeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Instance {
            get {
                return this.InstanceField;
            }
            set {
                if ((this.InstanceField.Equals(value) != true)) {
                    this.InstanceField = value;
                    this.RaisePropertyChanged("Instance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerName {
            get {
                return this.ManufacturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerNameField, value) != true)) {
                    this.ManufacturerNameField = value;
                    this.RaisePropertyChanged("ManufacturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class LockInfo : ShabakahRedir.TCServiceReference.AutomationClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastOperationUserNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockStateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastOperation {
            get {
                return this.LastOperationField;
            }
            set {
                if ((this.LastOperationField.Equals(value) != true)) {
                    this.LastOperationField = value;
                    this.RaisePropertyChanged("LastOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastOperationUserNumber {
            get {
                return this.LastOperationUserNumberField;
            }
            set {
                if ((this.LastOperationUserNumberField.Equals(value) != true)) {
                    this.LastOperationUserNumberField = value;
                    this.RaisePropertyChanged("LastOperationUserNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockState {
            get {
                return this.LockStateField;
            }
            set {
                if ((this.LockStateField.Equals(value) != true)) {
                    this.LockStateField = value;
                    this.RaisePropertyChanged("LockState");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatInfo : ShabakahRedir.TCServiceReference.AutomationClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentFanModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatMode CurrentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatCurrentOpMode CurrentOpModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DirtyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatFanMode[] FanModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeasurementUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatMode[] ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatSupportedOpMode[] SupportedOpModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatModeSetPoint ThermostatModeSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatThresholdPoint ThresholdPointField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentFanModeId {
            get {
                return this.CurrentFanModeIdField;
            }
            set {
                if ((this.CurrentFanModeIdField.Equals(value) != true)) {
                    this.CurrentFanModeIdField = value;
                    this.RaisePropertyChanged("CurrentFanModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatMode CurrentMode {
            get {
                return this.CurrentModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentModeField, value) != true)) {
                    this.CurrentModeField = value;
                    this.RaisePropertyChanged("CurrentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatCurrentOpMode CurrentOpMode {
            get {
                return this.CurrentOpModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentOpModeField, value) != true)) {
                    this.CurrentOpModeField = value;
                    this.RaisePropertyChanged("CurrentOpMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentTemp {
            get {
                return this.CurrentTempField;
            }
            set {
                if ((this.CurrentTempField.Equals(value) != true)) {
                    this.CurrentTempField = value;
                    this.RaisePropertyChanged("CurrentTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DirtyFlag {
            get {
                return this.DirtyFlagField;
            }
            set {
                if ((this.DirtyFlagField.Equals(value) != true)) {
                    this.DirtyFlagField = value;
                    this.RaisePropertyChanged("DirtyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatFanMode[] FanMode {
            get {
                return this.FanModeField;
            }
            set {
                if ((object.ReferenceEquals(this.FanModeField, value) != true)) {
                    this.FanModeField = value;
                    this.RaisePropertyChanged("FanMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeasurementUnit {
            get {
                return this.MeasurementUnitField;
            }
            set {
                if ((this.MeasurementUnitField.Equals(value) != true)) {
                    this.MeasurementUnitField = value;
                    this.RaisePropertyChanged("MeasurementUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatMode[] Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatSupportedOpMode[] SupportedOpMode {
            get {
                return this.SupportedOpModeField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedOpModeField, value) != true)) {
                    this.SupportedOpModeField = value;
                    this.RaisePropertyChanged("SupportedOpMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatModeSetPoint ThermostatModeSetPoint {
            get {
                return this.ThermostatModeSetPointField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatModeSetPointField, value) != true)) {
                    this.ThermostatModeSetPointField = value;
                    this.RaisePropertyChanged("ThermostatModeSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatThresholdPoint ThresholdPoint {
            get {
                return this.ThresholdPointField;
            }
            set {
                if ((object.ReferenceEquals(this.ThresholdPointField, value) != true)) {
                    this.ThresholdPointField = value;
                    this.RaisePropertyChanged("ThresholdPoint");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatMode", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SetPoint1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SetPoint2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SetPoint1 {
            get {
                return this.SetPoint1Field;
            }
            set {
                if ((this.SetPoint1Field.Equals(value) != true)) {
                    this.SetPoint1Field = value;
                    this.RaisePropertyChanged("SetPoint1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SetPoint2 {
            get {
                return this.SetPoint2Field;
            }
            set {
                if ((this.SetPoint2Field.Equals(value) != true)) {
                    this.SetPoint2Field = value;
                    this.RaisePropertyChanged("SetPoint2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatCurrentOpMode", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatCurrentOpMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SetPoint1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SetPoint2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SetPoint1 {
            get {
                return this.SetPoint1Field;
            }
            set {
                if ((this.SetPoint1Field.Equals(value) != true)) {
                    this.SetPoint1Field = value;
                    this.RaisePropertyChanged("SetPoint1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SetPoint2 {
            get {
                return this.SetPoint2Field;
            }
            set {
                if ((this.SetPoint2Field.Equals(value) != true)) {
                    this.SetPoint2Field = value;
                    this.RaisePropertyChanged("SetPoint2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatModeSetPoint", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatModeSetPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoolSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnergySaveCoolPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnergySaveHeatPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeatSetPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoolSetPoint {
            get {
                return this.CoolSetPointField;
            }
            set {
                if ((this.CoolSetPointField.Equals(value) != true)) {
                    this.CoolSetPointField = value;
                    this.RaisePropertyChanged("CoolSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnergySaveCoolPoint {
            get {
                return this.EnergySaveCoolPointField;
            }
            set {
                if ((this.EnergySaveCoolPointField.Equals(value) != true)) {
                    this.EnergySaveCoolPointField = value;
                    this.RaisePropertyChanged("EnergySaveCoolPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnergySaveHeatPoint {
            get {
                return this.EnergySaveHeatPointField;
            }
            set {
                if ((this.EnergySaveHeatPointField.Equals(value) != true)) {
                    this.EnergySaveHeatPointField = value;
                    this.RaisePropertyChanged("EnergySaveHeatPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HeatSetPoint {
            get {
                return this.HeatSetPointField;
            }
            set {
                if ((this.HeatSetPointField.Equals(value) != true)) {
                    this.HeatSetPointField = value;
                    this.RaisePropertyChanged("HeatSetPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatThresholdPoint", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatThresholdPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoolThresholdStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeatThresholdStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SetPoint1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SetPoint2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoolThresholdStatus {
            get {
                return this.CoolThresholdStatusField;
            }
            set {
                if ((this.CoolThresholdStatusField.Equals(value) != true)) {
                    this.CoolThresholdStatusField = value;
                    this.RaisePropertyChanged("CoolThresholdStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeatThresholdStatus {
            get {
                return this.HeatThresholdStatusField;
            }
            set {
                if ((this.HeatThresholdStatusField.Equals(value) != true)) {
                    this.HeatThresholdStatusField = value;
                    this.RaisePropertyChanged("HeatThresholdStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SetPoint1 {
            get {
                return this.SetPoint1Field;
            }
            set {
                if ((this.SetPoint1Field.Equals(value) != true)) {
                    this.SetPoint1Field = value;
                    this.RaisePropertyChanged("SetPoint1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SetPoint2 {
            get {
                return this.SetPoint2Field;
            }
            set {
                if ((this.SetPoint2Field.Equals(value) != true)) {
                    this.SetPoint2Field = value;
                    this.RaisePropertyChanged("SetPoint2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatFanMode", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatFanMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatSupportedOpMode", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatSupportedOpMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchStateInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class SwitchStateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSwitchStatusAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwitchLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwitchStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceStatus {
            get {
                return this.DeviceStatusField;
            }
            set {
                if ((this.DeviceStatusField.Equals(value) != true)) {
                    this.DeviceStatusField = value;
                    this.RaisePropertyChanged("DeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSwitchStatusAvailable {
            get {
                return this.IsSwitchStatusAvailableField;
            }
            set {
                if ((this.IsSwitchStatusAvailableField.Equals(value) != true)) {
                    this.IsSwitchStatusAvailableField = value;
                    this.RaisePropertyChanged("IsSwitchStatusAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwitchLevel {
            get {
                return this.SwitchLevelField;
            }
            set {
                if ((this.SwitchLevelField.Equals(value) != true)) {
                    this.SwitchLevelField = value;
                    this.RaisePropertyChanged("SwitchLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwitchState {
            get {
                return this.SwitchStateField;
            }
            set {
                if ((this.SwitchStateField.Equals(value) != true)) {
                    this.SwitchStateField = value;
                    this.RaisePropertyChanged("SwitchState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class LockConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockNameCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerNameCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfStatusFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberofCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgrammedLocksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockNameCapacity {
            get {
                return this.LockNameCapacityField;
            }
            set {
                if ((this.LockNameCapacityField.Equals(value) != true)) {
                    this.LockNameCapacityField = value;
                    this.RaisePropertyChanged("LockNameCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerNameCapacity {
            get {
                return this.ManufacturerNameCapacityField;
            }
            set {
                if ((this.ManufacturerNameCapacityField.Equals(value) != true)) {
                    this.ManufacturerNameCapacityField = value;
                    this.RaisePropertyChanged("ManufacturerNameCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfStatusFields {
            get {
                return this.NumberOfStatusFieldsField;
            }
            set {
                if ((this.NumberOfStatusFieldsField.Equals(value) != true)) {
                    this.NumberOfStatusFieldsField = value;
                    this.RaisePropertyChanged("NumberOfStatusFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberofCategories {
            get {
                return this.NumberofCategoriesField;
            }
            set {
                if ((this.NumberofCategoriesField.Equals(value) != true)) {
                    this.NumberofCategoriesField = value;
                    this.RaisePropertyChanged("NumberofCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgrammedLocks {
            get {
                return this.ProgrammedLocksField;
            }
            set {
                if ((this.ProgrammedLocksField.Equals(value) != true)) {
                    this.ProgrammedLocksField = value;
                    this.RaisePropertyChanged("ProgrammedLocks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerNameCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfStatusFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberofCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgrammedThermoStatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThermostatNameCapacityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerNameCapacity {
            get {
                return this.ManufacturerNameCapacityField;
            }
            set {
                if ((this.ManufacturerNameCapacityField.Equals(value) != true)) {
                    this.ManufacturerNameCapacityField = value;
                    this.RaisePropertyChanged("ManufacturerNameCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfStatusFields {
            get {
                return this.NumberOfStatusFieldsField;
            }
            set {
                if ((this.NumberOfStatusFieldsField.Equals(value) != true)) {
                    this.NumberOfStatusFieldsField = value;
                    this.RaisePropertyChanged("NumberOfStatusFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberofCategories {
            get {
                return this.NumberofCategoriesField;
            }
            set {
                if ((this.NumberofCategoriesField.Equals(value) != true)) {
                    this.NumberofCategoriesField = value;
                    this.RaisePropertyChanged("NumberofCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgrammedThermoStats {
            get {
                return this.ProgrammedThermoStatsField;
            }
            set {
                if ((this.ProgrammedThermoStatsField.Equals(value) != true)) {
                    this.ProgrammedThermoStatsField = value;
                    this.RaisePropertyChanged("ProgrammedThermoStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThermostatNameCapacity {
            get {
                return this.ThermostatNameCapacityField;
            }
            set {
                if ((this.ThermostatNameCapacityField.Equals(value) != true)) {
                    this.ThermostatNameCapacityField = value;
                    this.RaisePropertyChanged("ThermostatNameCapacity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatStateInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatStateInfo : ShabakahRedir.TCServiceReference.Thermostat {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoolSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnergySaveCoolPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnergySaveHeatPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeatSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoolSetPoint {
            get {
                return this.CoolSetPointField;
            }
            set {
                if ((this.CoolSetPointField.Equals(value) != true)) {
                    this.CoolSetPointField = value;
                    this.RaisePropertyChanged("CoolSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentTemp {
            get {
                return this.CurrentTempField;
            }
            set {
                if ((this.CurrentTempField.Equals(value) != true)) {
                    this.CurrentTempField = value;
                    this.RaisePropertyChanged("CurrentTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceStatus {
            get {
                return this.DeviceStatusField;
            }
            set {
                if ((this.DeviceStatusField.Equals(value) != true)) {
                    this.DeviceStatusField = value;
                    this.RaisePropertyChanged("DeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnergySaveCoolPoint {
            get {
                return this.EnergySaveCoolPointField;
            }
            set {
                if ((this.EnergySaveCoolPointField.Equals(value) != true)) {
                    this.EnergySaveCoolPointField = value;
                    this.RaisePropertyChanged("EnergySaveCoolPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnergySaveHeatPoint {
            get {
                return this.EnergySaveHeatPointField;
            }
            set {
                if ((this.EnergySaveHeatPointField.Equals(value) != true)) {
                    this.EnergySaveHeatPointField = value;
                    this.RaisePropertyChanged("EnergySaveHeatPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HeatSetPoint {
            get {
                return this.HeatSetPointField;
            }
            set {
                if ((this.HeatSetPointField.Equals(value) != true)) {
                    this.HeatSetPointField = value;
                    this.RaisePropertyChanged("HeatSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Thermostat", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.ThermostatStateInfo))]
    public partial class Thermostat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentFanModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatMode CurrentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatCurrentOpMode CurrentOpModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatThresholdPoint ThresholdPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentFanModeId {
            get {
                return this.CurrentFanModeIdField;
            }
            set {
                if ((this.CurrentFanModeIdField.Equals(value) != true)) {
                    this.CurrentFanModeIdField = value;
                    this.RaisePropertyChanged("CurrentFanModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatMode CurrentMode {
            get {
                return this.CurrentModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentModeField, value) != true)) {
                    this.CurrentModeField = value;
                    this.RaisePropertyChanged("CurrentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatCurrentOpMode CurrentOpMode {
            get {
                return this.CurrentOpModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentOpModeField, value) != true)) {
                    this.CurrentOpModeField = value;
                    this.RaisePropertyChanged("CurrentOpMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatThresholdPoint ThresholdPoint {
            get {
                return this.ThresholdPointField;
            }
            set {
                if ((object.ReferenceEquals(this.ThresholdPointField, value) != true)) {
                    this.ThresholdPointField = value;
                    this.RaisePropertyChanged("ThresholdPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatStateExInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatStateExInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoolSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentFanModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatMode CurrentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatCurrentOpMode CurrentOpModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnergySaveCoolPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EnergySaveHeatPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeatSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatThresholdPoint ThresholdPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoolSetPoint {
            get {
                return this.CoolSetPointField;
            }
            set {
                if ((this.CoolSetPointField.Equals(value) != true)) {
                    this.CoolSetPointField = value;
                    this.RaisePropertyChanged("CoolSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentFanModeId {
            get {
                return this.CurrentFanModeIdField;
            }
            set {
                if ((this.CurrentFanModeIdField.Equals(value) != true)) {
                    this.CurrentFanModeIdField = value;
                    this.RaisePropertyChanged("CurrentFanModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatMode CurrentMode {
            get {
                return this.CurrentModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentModeField, value) != true)) {
                    this.CurrentModeField = value;
                    this.RaisePropertyChanged("CurrentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatCurrentOpMode CurrentOpMode {
            get {
                return this.CurrentOpModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentOpModeField, value) != true)) {
                    this.CurrentOpModeField = value;
                    this.RaisePropertyChanged("CurrentOpMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentTemp {
            get {
                return this.CurrentTempField;
            }
            set {
                if ((this.CurrentTempField.Equals(value) != true)) {
                    this.CurrentTempField = value;
                    this.RaisePropertyChanged("CurrentTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceStatus {
            get {
                return this.DeviceStatusField;
            }
            set {
                if ((this.DeviceStatusField.Equals(value) != true)) {
                    this.DeviceStatusField = value;
                    this.RaisePropertyChanged("DeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnergySaveCoolPoint {
            get {
                return this.EnergySaveCoolPointField;
            }
            set {
                if ((this.EnergySaveCoolPointField.Equals(value) != true)) {
                    this.EnergySaveCoolPointField = value;
                    this.RaisePropertyChanged("EnergySaveCoolPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EnergySaveHeatPoint {
            get {
                return this.EnergySaveHeatPointField;
            }
            set {
                if ((this.EnergySaveHeatPointField.Equals(value) != true)) {
                    this.EnergySaveHeatPointField = value;
                    this.RaisePropertyChanged("EnergySaveHeatPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HeatSetPoint {
            get {
                return this.HeatSetPointField;
            }
            set {
                if ((this.HeatSetPointField.Equals(value) != true)) {
                    this.HeatSetPointField = value;
                    this.RaisePropertyChanged("HeatSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatThresholdPoint ThresholdPoint {
            get {
                return this.ThresholdPointField;
            }
            set {
                if ((object.ReferenceEquals(this.ThresholdPointField, value) != true)) {
                    this.ThresholdPointField = value;
                    this.RaisePropertyChanged("ThresholdPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SceneConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class SceneConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceCapacityPerSceneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SlotRange ModifiableSlotRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProgrammedSceneNumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceCapacityPerScene {
            get {
                return this.DeviceCapacityPerSceneField;
            }
            set {
                if ((this.DeviceCapacityPerSceneField.Equals(value) != true)) {
                    this.DeviceCapacityPerSceneField = value;
                    this.RaisePropertyChanged("DeviceCapacityPerScene");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SlotRange ModifiableSlotRange {
            get {
                return this.ModifiableSlotRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiableSlotRangeField, value) != true)) {
                    this.ModifiableSlotRangeField = value;
                    this.RaisePropertyChanged("ModifiableSlotRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProgrammedSceneNumbers {
            get {
                return this.ProgrammedSceneNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammedSceneNumbersField, value) != true)) {
                    this.ProgrammedSceneNumbersField = value;
                    this.RaisePropertyChanged("ProgrammedSceneNumbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SlotRange", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class SlotRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinimumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maximum {
            get {
                return this.MaximumField;
            }
            set {
                if ((this.MaximumField.Equals(value) != true)) {
                    this.MaximumField = value;
                    this.RaisePropertyChanged("Maximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minimum {
            get {
                return this.MinimumField;
            }
            set {
                if ((this.MinimumField.Equals(value) != true)) {
                    this.MinimumField = value;
                    this.RaisePropertyChanged("Minimum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Scene", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class Scene : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationDeviceSetting[] AutomationDeviceSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationDeviceSetting[] AutomationDeviceSettings {
            get {
                return this.AutomationDeviceSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.AutomationDeviceSettingsField, value) != true)) {
                    this.AutomationDeviceSettingsField = value;
                    this.RaisePropertyChanged("AutomationDeviceSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationDeviceSetting", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.ThermostatSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.LockSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.SwitchSetting))]
    public partial class AutomationDeviceSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.AutomationDeviceType AutomationDeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.AutomationDeviceType AutomationDeviceType {
            get {
                return this.AutomationDeviceTypeField;
            }
            set {
                if ((this.AutomationDeviceTypeField.Equals(value) != true)) {
                    this.AutomationDeviceTypeField = value;
                    this.RaisePropertyChanged("AutomationDeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceIndex {
            get {
                return this.DeviceIndexField;
            }
            set {
                if ((this.DeviceIndexField.Equals(value) != true)) {
                    this.DeviceIndexField = value;
                    this.RaisePropertyChanged("DeviceIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatSetting", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatSetting : ShabakahRedir.TCServiceReference.AutomationDeviceSetting {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatFanMode ThermostatFanModeSettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatModeSetting ThermostatModeSettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatFanMode ThermostatFanModeSetting {
            get {
                return this.ThermostatFanModeSettingField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatFanModeSettingField, value) != true)) {
                    this.ThermostatFanModeSettingField = value;
                    this.RaisePropertyChanged("ThermostatFanModeSetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatModeSetting ThermostatModeSetting {
            get {
                return this.ThermostatModeSettingField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatModeSettingField, value) != true)) {
                    this.ThermostatModeSettingField = value;
                    this.RaisePropertyChanged("ThermostatModeSetting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockSetting", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class LockSetting : ShabakahRedir.TCServiceReference.AutomationDeviceSetting {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesiredStateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizingCode {
            get {
                return this.AuthorizingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizingCodeField, value) != true)) {
                    this.AuthorizingCodeField = value;
                    this.RaisePropertyChanged("AuthorizingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesiredState {
            get {
                return this.DesiredStateField;
            }
            set {
                if ((this.DesiredStateField.Equals(value) != true)) {
                    this.DesiredStateField = value;
                    this.RaisePropertyChanged("DesiredState");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchSetting", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class SwitchSetting : ShabakahRedir.TCServiceReference.AutomationDeviceSetting {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesiredStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DimmerLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesiredState {
            get {
                return this.DesiredStateField;
            }
            set {
                if ((this.DesiredStateField.Equals(value) != true)) {
                    this.DesiredStateField = value;
                    this.RaisePropertyChanged("DesiredState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DimmerLevel {
            get {
                return this.DimmerLevelField;
            }
            set {
                if ((this.DimmerLevelField.Equals(value) != true)) {
                    this.DimmerLevelField = value;
                    this.RaisePropertyChanged("DimmerLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatModeSetting", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ThermostatModeSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SetPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeID {
            get {
                return this.ModeIDField;
            }
            set {
                if ((this.ModeIDField.Equals(value) != true)) {
                    this.ModeIDField = value;
                    this.RaisePropertyChanged("ModeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SetPoints {
            get {
                return this.SetPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.SetPointsField, value) != true)) {
                    this.SetPointsField = value;
                    this.RaisePropertyChanged("SetPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class RuleConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SlotRange ModifiableSlotRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProgrammedRuleNumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SlotRange ModifiableSlotRange {
            get {
                return this.ModifiableSlotRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiableSlotRangeField, value) != true)) {
                    this.ModifiableSlotRangeField = value;
                    this.RaisePropertyChanged("ModifiableSlotRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProgrammedRuleNumbers {
            get {
                return this.ProgrammedRuleNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammedRuleNumbersField, value) != true)) {
                    this.ProgrammedRuleNumbersField = value;
                    this.RaisePropertyChanged("ProgrammedRuleNumbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventAction", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class EventAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AnyUserLockOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SystemOperation EndSystemOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneType FaultConditionZoneTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] FaultZoneNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SystemOperation LockActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneType RestoreConditionZoneTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] RestoreZoneNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SystemOperation StartSystemOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] UserLockOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ZoneOperationType ZoneOperationTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AnyUserLockOperation {
            get {
                return this.AnyUserLockOperationField;
            }
            set {
                if ((this.AnyUserLockOperationField.Equals(value) != true)) {
                    this.AnyUserLockOperationField = value;
                    this.RaisePropertyChanged("AnyUserLockOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SystemOperation EndSystemOperation {
            get {
                return this.EndSystemOperationField;
            }
            set {
                if ((this.EndSystemOperationField.Equals(value) != true)) {
                    this.EndSystemOperationField = value;
                    this.RaisePropertyChanged("EndSystemOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneType FaultConditionZoneType {
            get {
                return this.FaultConditionZoneTypeField;
            }
            set {
                if ((this.FaultConditionZoneTypeField.Equals(value) != true)) {
                    this.FaultConditionZoneTypeField = value;
                    this.RaisePropertyChanged("FaultConditionZoneType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] FaultZoneNumbers {
            get {
                return this.FaultZoneNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultZoneNumbersField, value) != true)) {
                    this.FaultZoneNumbersField = value;
                    this.RaisePropertyChanged("FaultZoneNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SystemOperation LockAction {
            get {
                return this.LockActionField;
            }
            set {
                if ((this.LockActionField.Equals(value) != true)) {
                    this.LockActionField = value;
                    this.RaisePropertyChanged("LockAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneType RestoreConditionZoneType {
            get {
                return this.RestoreConditionZoneTypeField;
            }
            set {
                if ((this.RestoreConditionZoneTypeField.Equals(value) != true)) {
                    this.RestoreConditionZoneTypeField = value;
                    this.RaisePropertyChanged("RestoreConditionZoneType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] RestoreZoneNumbers {
            get {
                return this.RestoreZoneNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.RestoreZoneNumbersField, value) != true)) {
                    this.RestoreZoneNumbersField = value;
                    this.RaisePropertyChanged("RestoreZoneNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleAction {
            get {
                return this.RuleActionField;
            }
            set {
                if ((this.RuleActionField.Equals(value) != true)) {
                    this.RuleActionField = value;
                    this.RaisePropertyChanged("RuleAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleType {
            get {
                return this.RuleTypeField;
            }
            set {
                if ((this.RuleTypeField.Equals(value) != true)) {
                    this.RuleTypeField = value;
                    this.RaisePropertyChanged("RuleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SystemOperation StartSystemOperation {
            get {
                return this.StartSystemOperationField;
            }
            set {
                if ((this.StartSystemOperationField.Equals(value) != true)) {
                    this.StartSystemOperationField = value;
                    this.RaisePropertyChanged("StartSystemOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] UserLockOperation {
            get {
                return this.UserLockOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLockOperationField, value) != true)) {
                    this.UserLockOperationField = value;
                    this.RaisePropertyChanged("UserLockOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ZoneOperationType ZoneOperationType {
            get {
                return this.ZoneOperationTypeField;
            }
            set {
                if ((this.ZoneOperationTypeField.Equals(value) != true)) {
                    this.ZoneOperationTypeField = value;
                    this.RaisePropertyChanged("ZoneOperationType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemOperation", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum SystemOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUsed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStay = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmAway = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disarm = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndExitDelay = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartEntryDelay = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnyBurglaryAlarm = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BellTimeout = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chime = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kissoff = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnyFireAlarm = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bypass = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemLowBattery = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommFailure = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuressAlarm = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStayNight = 59,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneOperationType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum ZoneOperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUsed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fault = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trouble = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alarm = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleConfiguration", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class ScheduleConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasRandomizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSunriseSunsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxNameLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SlotRange ModifiableSlotRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProgrammedScheduleNumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasRandomize {
            get {
                return this.HasRandomizeField;
            }
            set {
                if ((this.HasRandomizeField.Equals(value) != true)) {
                    this.HasRandomizeField = value;
                    this.RaisePropertyChanged("HasRandomize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSunriseSunset {
            get {
                return this.HasSunriseSunsetField;
            }
            set {
                if ((this.HasSunriseSunsetField.Equals(value) != true)) {
                    this.HasSunriseSunsetField = value;
                    this.RaisePropertyChanged("HasSunriseSunset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxNameLength {
            get {
                return this.MaxNameLengthField;
            }
            set {
                if ((this.MaxNameLengthField.Equals(value) != true)) {
                    this.MaxNameLengthField = value;
                    this.RaisePropertyChanged("MaxNameLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SlotRange ModifiableSlotRange {
            get {
                return this.ModifiableSlotRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiableSlotRangeField, value) != true)) {
                    this.ModifiableSlotRangeField = value;
                    this.RaisePropertyChanged("ModifiableSlotRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProgrammedScheduleNumbers {
            get {
                return this.ProgrammedScheduleNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammedScheduleNumbersField, value) != true)) {
                    this.ProgrammedScheduleNumbersField = value;
                    this.RaisePropertyChanged("ProgrammedScheduleNumbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class Schedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociatedParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DaySpecifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ScheduleFrequency FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RandomizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ScheduleType ScheduleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SunriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SunsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociatedParameter {
            get {
                return this.AssociatedParameterField;
            }
            set {
                if ((this.AssociatedParameterField.Equals(value) != true)) {
                    this.AssociatedParameterField = value;
                    this.RaisePropertyChanged("AssociatedParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] DaySpecifier {
            get {
                return this.DaySpecifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DaySpecifierField, value) != true)) {
                    this.DaySpecifierField = value;
                    this.RaisePropertyChanged("DaySpecifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ScheduleFrequency Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Randomize {
            get {
                return this.RandomizeField;
            }
            set {
                if ((this.RandomizeField.Equals(value) != true)) {
                    this.RandomizeField = value;
                    this.RaisePropertyChanged("Randomize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduleDate {
            get {
                return this.ScheduleDateField;
            }
            set {
                if ((this.ScheduleDateField.Equals(value) != true)) {
                    this.ScheduleDateField = value;
                    this.RaisePropertyChanged("ScheduleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ScheduleType ScheduleType {
            get {
                return this.ScheduleTypeField;
            }
            set {
                if ((this.ScheduleTypeField.Equals(value) != true)) {
                    this.ScheduleTypeField = value;
                    this.RaisePropertyChanged("ScheduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sunrise {
            get {
                return this.SunriseField;
            }
            set {
                if ((this.SunriseField.Equals(value) != true)) {
                    this.SunriseField = value;
                    this.RaisePropertyChanged("Sunrise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sunset {
            get {
                return this.SunsetField;
            }
            set {
                if ((this.SunsetField.Equals(value) != true)) {
                    this.SunsetField = value;
                    this.RaisePropertyChanged("Sunset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleFrequency", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum ScheduleFrequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Once = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Daily = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunrise = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunset = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleType", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    public enum ScheduleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoStay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Output = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisArmNotification = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rules = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scenes = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureSchedule", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class TemperatureSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoolSetbackTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.DayTemperatureSchedule[] DaysTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeatSetbackTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThermostatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThermostatIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoolSetbackTemperature {
            get {
                return this.CoolSetbackTemperatureField;
            }
            set {
                if ((this.CoolSetbackTemperatureField.Equals(value) != true)) {
                    this.CoolSetbackTemperatureField = value;
                    this.RaisePropertyChanged("CoolSetbackTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.DayTemperatureSchedule[] DaysTemperature {
            get {
                return this.DaysTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysTemperatureField, value) != true)) {
                    this.DaysTemperatureField = value;
                    this.RaisePropertyChanged("DaysTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeatSetbackTemperature {
            get {
                return this.HeatSetbackTemperatureField;
            }
            set {
                if ((this.HeatSetbackTemperatureField.Equals(value) != true)) {
                    this.HeatSetbackTemperatureField = value;
                    this.RaisePropertyChanged("HeatSetbackTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThermostatId {
            get {
                return this.ThermostatIdField;
            }
            set {
                if ((this.ThermostatIdField.Equals(value) != true)) {
                    this.ThermostatIdField = value;
                    this.RaisePropertyChanged("ThermostatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThermostatIndex {
            get {
                return this.ThermostatIndexField;
            }
            set {
                if ((this.ThermostatIndexField.Equals(value) != true)) {
                    this.ThermostatIndexField = value;
                    this.RaisePropertyChanged("ThermostatIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayTemperatureSchedule", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class DayTemperatureSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.TimePeriod[] DayTimePeriodsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayNumber {
            get {
                return this.DayNumberField;
            }
            set {
                if ((this.DayNumberField.Equals(value) != true)) {
                    this.DayNumberField = value;
                    this.RaisePropertyChanged("DayNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.TimePeriod[] DayTimePeriods {
            get {
                return this.DayTimePeriodsField;
            }
            set {
                if ((object.ReferenceEquals(this.DayTimePeriodsField, value) != true)) {
                    this.DayTimePeriodsField = value;
                    this.RaisePropertyChanged("DayTimePeriods");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimePeriod", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class TimePeriod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoolSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeatSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTimePeriodEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoolSetPoint {
            get {
                return this.CoolSetPointField;
            }
            set {
                if ((this.CoolSetPointField.Equals(value) != true)) {
                    this.CoolSetPointField = value;
                    this.RaisePropertyChanged("CoolSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeatSetPoint {
            get {
                return this.HeatSetPointField;
            }
            set {
                if ((this.HeatSetPointField.Equals(value) != true)) {
                    this.HeatSetPointField = value;
                    this.RaisePropertyChanged("HeatSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTimePeriodEnabled {
            get {
                return this.IsTimePeriodEnabledField;
            }
            set {
                if ((this.IsTimePeriodEnabledField.Equals(value) != true)) {
                    this.IsTimePeriodEnabledField = value;
                    this.RaisePropertyChanged("IsTimePeriodEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelUser", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class PanelUser : ShabakahRedir.TCServiceReference.CALCommandResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.UserOption[] ExtendedUserOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.PartitionAuthority[] PartitionAuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.UserOption[] PartitionUserOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.UserOption[] ExtendedUserOptions {
            get {
                return this.ExtendedUserOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedUserOptionsField, value) != true)) {
                    this.ExtendedUserOptionsField = value;
                    this.RaisePropertyChanged("ExtendedUserOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.PartitionAuthority[] PartitionAuthority {
            get {
                return this.PartitionAuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionAuthorityField, value) != true)) {
                    this.PartitionAuthorityField = value;
                    this.RaisePropertyChanged("PartitionAuthority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.UserOption[] PartitionUserOptions {
            get {
                return this.PartitionUserOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionUserOptionsField, value) != true)) {
                    this.PartitionUserOptionsField = value;
                    this.RaisePropertyChanged("PartitionUserOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlotNumber {
            get {
                return this.SlotNumberField;
            }
            set {
                if ((this.SlotNumberField.Equals(value) != true)) {
                    this.SlotNumberField = value;
                    this.RaisePropertyChanged("SlotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCodeField, value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CALCommandResult", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShabakahRedir.TCServiceReference.PanelUser))]
    public partial class CALCommandResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommandResultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommandResultCode {
            get {
                return this.CommandResultCodeField;
            }
            set {
                if ((this.CommandResultCodeField.Equals(value) != true)) {
                    this.CommandResultCodeField = value;
                    this.RaisePropertyChanged("CommandResultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserOption", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class UserOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OptionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OptionNumber {
            get {
                return this.OptionNumberField;
            }
            set {
                if ((this.OptionNumberField.Equals(value) != true)) {
                    this.OptionNumberField = value;
                    this.RaisePropertyChanged("OptionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionValue {
            get {
                return this.OptionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionValueField, value) != true)) {
                    this.OptionValueField = value;
                    this.RaisePropertyChanged("OptionValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartitionAuthority", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class PartitionAuthority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartitionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorityLevel {
            get {
                return this.AuthorityLevelField;
            }
            set {
                if ((this.AuthorityLevelField.Equals(value) != true)) {
                    this.AuthorityLevelField = value;
                    this.RaisePropertyChanged("AuthorityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartitionNumber {
            get {
                return this.PartitionNumberField;
            }
            set {
                if ((this.PartitionNumberField.Equals(value) != true)) {
                    this.PartitionNumberField = value;
                    this.RaisePropertyChanged("PartitionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eSmartActionState", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eSmartActionState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.CameraSubAction BuiltInCameraSubActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.LockSubAction[] LockSubActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SmartActionSchedule ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SecuritySubAction[] SecuritySubActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmartActionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eSmartActionState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SwitchSubAction[] SwitchSubActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.ThermostatSubAction[] ThermostatSubActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.SmartActionTriggerEvent TriggerEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eTriggerType TriggerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.CameraSubAction BuiltInCameraSubAction {
            get {
                return this.BuiltInCameraSubActionField;
            }
            set {
                if ((object.ReferenceEquals(this.BuiltInCameraSubActionField, value) != true)) {
                    this.BuiltInCameraSubActionField = value;
                    this.RaisePropertyChanged("BuiltInCameraSubAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.LockSubAction[] LockSubActions {
            get {
                return this.LockSubActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.LockSubActionsField, value) != true)) {
                    this.LockSubActionsField = value;
                    this.RaisePropertyChanged("LockSubActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SmartActionSchedule Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SecuritySubAction[] SecuritySubActions {
            get {
                return this.SecuritySubActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySubActionsField, value) != true)) {
                    this.SecuritySubActionsField = value;
                    this.RaisePropertyChanged("SecuritySubActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmartActionNumber {
            get {
                return this.SmartActionNumberField;
            }
            set {
                if ((this.SmartActionNumberField.Equals(value) != true)) {
                    this.SmartActionNumberField = value;
                    this.RaisePropertyChanged("SmartActionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eSmartActionState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SwitchSubAction[] SwitchSubActions {
            get {
                return this.SwitchSubActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchSubActionsField, value) != true)) {
                    this.SwitchSubActionsField = value;
                    this.RaisePropertyChanged("SwitchSubActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.ThermostatSubAction[] ThermostatSubActions {
            get {
                return this.ThermostatSubActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThermostatSubActionsField, value) != true)) {
                    this.ThermostatSubActionsField = value;
                    this.RaisePropertyChanged("ThermostatSubActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.SmartActionTriggerEvent TriggerEvent {
            get {
                return this.TriggerEventField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggerEventField, value) != true)) {
                    this.TriggerEventField = value;
                    this.RaisePropertyChanged("TriggerEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eTriggerType TriggerType {
            get {
                return this.TriggerTypeField;
            }
            set {
                if ((this.TriggerTypeField.Equals(value) != true)) {
                    this.TriggerTypeField = value;
                    this.RaisePropertyChanged("TriggerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraSubAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class CameraSubAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eCameraAction ActionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eCameraAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartActionSchedule", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartActionSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DayOfMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eScheduleFrequency FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RandomMinutesAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RandomMinutesBeforeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SmartActionScheduleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SunriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SunsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] DayOfMonth {
            get {
                return this.DayOfMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.DayOfMonthField, value) != true)) {
                    this.DayOfMonthField = value;
                    this.RaisePropertyChanged("DayOfMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayOfWeekField, value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eScheduleFrequency Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RandomMinutesAfter {
            get {
                return this.RandomMinutesAfterField;
            }
            set {
                if ((this.RandomMinutesAfterField.Equals(value) != true)) {
                    this.RandomMinutesAfterField = value;
                    this.RaisePropertyChanged("RandomMinutesAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RandomMinutesBefore {
            get {
                return this.RandomMinutesBeforeField;
            }
            set {
                if ((this.RandomMinutesBeforeField.Equals(value) != true)) {
                    this.RandomMinutesBeforeField = value;
                    this.RaisePropertyChanged("RandomMinutesBefore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleDate {
            get {
                return this.ScheduleDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleDateField, value) != true)) {
                    this.ScheduleDateField = value;
                    this.RaisePropertyChanged("ScheduleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SmartActionScheduleID {
            get {
                return this.SmartActionScheduleIDField;
            }
            set {
                if ((this.SmartActionScheduleIDField.Equals(value) != true)) {
                    this.SmartActionScheduleIDField = value;
                    this.RaisePropertyChanged("SmartActionScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sunrise {
            get {
                return this.SunriseField;
            }
            set {
                if ((this.SunriseField.Equals(value) != true)) {
                    this.SunriseField = value;
                    this.RaisePropertyChanged("Sunrise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sunset {
            get {
                return this.SunsetField;
            }
            set {
                if ((this.SunsetField.Equals(value) != true)) {
                    this.SunsetField = value;
                    this.RaisePropertyChanged("Sunset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartActionTriggerEvent", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SmartActionTriggerEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ShabakahRedir.TCServiceReference.eDeviceState> DeviceStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eZoneType FaultZoneTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eZoneType RestoreZoneTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eSystemOperation SystemOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eTriggerEventType TriggerEventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneNumberTriggerZoneOrDeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eZoneOperation ZoneOperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ShabakahRedir.TCServiceReference.eDeviceState> DeviceState {
            get {
                return this.DeviceStateField;
            }
            set {
                if ((this.DeviceStateField.Equals(value) != true)) {
                    this.DeviceStateField = value;
                    this.RaisePropertyChanged("DeviceState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eZoneType FaultZoneType {
            get {
                return this.FaultZoneTypeField;
            }
            set {
                if ((this.FaultZoneTypeField.Equals(value) != true)) {
                    this.FaultZoneTypeField = value;
                    this.RaisePropertyChanged("FaultZoneType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eZoneType RestoreZoneType {
            get {
                return this.RestoreZoneTypeField;
            }
            set {
                if ((this.RestoreZoneTypeField.Equals(value) != true)) {
                    this.RestoreZoneTypeField = value;
                    this.RaisePropertyChanged("RestoreZoneType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eSystemOperation SystemOperation {
            get {
                return this.SystemOperationField;
            }
            set {
                if ((this.SystemOperationField.Equals(value) != true)) {
                    this.SystemOperationField = value;
                    this.RaisePropertyChanged("SystemOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eTriggerEventType TriggerEventType {
            get {
                return this.TriggerEventTypeField;
            }
            set {
                if ((this.TriggerEventTypeField.Equals(value) != true)) {
                    this.TriggerEventTypeField = value;
                    this.RaisePropertyChanged("TriggerEventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneNumberTriggerZoneOrDeviceID {
            get {
                return this.ZoneNumberTriggerZoneOrDeviceIDField;
            }
            set {
                if ((this.ZoneNumberTriggerZoneOrDeviceIDField.Equals(value) != true)) {
                    this.ZoneNumberTriggerZoneOrDeviceIDField = value;
                    this.RaisePropertyChanged("ZoneNumberTriggerZoneOrDeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eZoneOperation ZoneOperation {
            get {
                return this.ZoneOperationField;
            }
            set {
                if ((this.ZoneOperationField.Equals(value) != true)) {
                    this.ZoneOperationField = value;
                    this.RaisePropertyChanged("ZoneOperation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockSubAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class LockSubAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eLockAction LockActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] LockIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eLockAction LockAction {
            get {
                return this.LockActionField;
            }
            set {
                if ((this.LockActionField.Equals(value) != true)) {
                    this.LockActionField = value;
                    this.RaisePropertyChanged("LockAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] LockIDs {
            get {
                return this.LockIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.LockIDsField, value) != true)) {
                    this.LockIDsField = value;
                    this.RaisePropertyChanged("LockIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecuritySubAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SecuritySubAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ByPassZonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eSecurityState StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ByPassZones {
            get {
                return this.ByPassZonesField;
            }
            set {
                if ((object.ReferenceEquals(this.ByPassZonesField, value) != true)) {
                    this.ByPassZonesField = value;
                    this.RaisePropertyChanged("ByPassZones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eSecurityState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchSubAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class SwitchSubAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eSwitchAction SwitchActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] SwitchIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eSwitchAction SwitchAction {
            get {
                return this.SwitchActionField;
            }
            set {
                if ((this.SwitchActionField.Equals(value) != true)) {
                    this.SwitchActionField = value;
                    this.RaisePropertyChanged("SwitchAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] SwitchIDs {
            get {
                return this.SwitchIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchIDsField, value) != true)) {
                    this.SwitchIDsField = value;
                    this.RaisePropertyChanged("SwitchIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermostatSubAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    [System.SerializableAttribute()]
    public partial class ThermostatSubAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoolSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eFanMode FanModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeatSetPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eThermostatMode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ThermostatIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoolSetPoint {
            get {
                return this.CoolSetPointField;
            }
            set {
                if ((this.CoolSetPointField.Equals(value) != true)) {
                    this.CoolSetPointField = value;
                    this.RaisePropertyChanged("CoolSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eFanMode FanMode {
            get {
                return this.FanModeField;
            }
            set {
                if ((this.FanModeField.Equals(value) != true)) {
                    this.FanModeField = value;
                    this.RaisePropertyChanged("FanMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HeatSetPoint {
            get {
                return this.HeatSetPointField;
            }
            set {
                if ((this.HeatSetPointField.Equals(value) != true)) {
                    this.HeatSetPointField = value;
                    this.RaisePropertyChanged("HeatSetPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eThermostatMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ThermostatID {
            get {
                return this.ThermostatIDField;
            }
            set {
                if ((this.ThermostatIDField.Equals(value) != true)) {
                    this.ThermostatIDField = value;
                    this.RaisePropertyChanged("ThermostatID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eTriggerType", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eTriggerType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Anytime = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventTriggered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTriggered = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eCameraAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eCameraAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Snapshot = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eLockAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eLockAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnlockAll = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockAll = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnlockSome = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockSome = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eScheduleFrequency", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eScheduleFrequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Once = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Daily = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunrise = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunset = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eSecurityState", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eSecurityState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disarm = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmAway = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStay = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByPass = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eSwitchAction", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eSwitchAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllOff = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllOn = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SomeOff = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SomeOn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllDim = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SomeDim = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eFanMode", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eFanMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auto = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoHigh = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoMedium = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circulation = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HumidityCirculation = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eThermostatMode", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eThermostatMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auto = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Heat = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cool = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnergySaveHeat = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnergySaveCool = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmergencyHeat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resume = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Setback = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eDeviceState", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eDeviceState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off_Unlock = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        On_Lock = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eZoneType", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eZoneType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryExit1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryExit2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Perimeter = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteriorFollower = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TroubleDayAlarmNight = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SilentAlarm_24Hour = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AudibleAlarm_24Hour = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auxiliary_24Hour = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireNoVerification = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteriorDelay = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monitor_24Hour = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemotePS = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COAlarm = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medical_24Hour = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireWithVerification = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireWaterFlow = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireSupervisory = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trouble_24Hour = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStay = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmAway = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disarm = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAlarmResponse = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Silent = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JiffyLube_24Hour = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessPoint = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainLogicBoardSupervision = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MomentaryExit = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GarageDoor = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Keyswitch = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AAVMonitor = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResiMonitor = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResiResponse = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoConfirmResiMonitor = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoConfirmResiResponse = 88,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eSystemOperation", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eSystemOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUsed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStay = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmAway = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disarm = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndExitDelay = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartEntryDelay = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BurglaryAlarm = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BellTimeout = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chime = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kissoff = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireAlarm = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bypass = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemLowBattery = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommFailure = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuressAlarm = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmNightStay = 59,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eTriggerEventType", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eTriggerEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZoneType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemOperation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAction = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZoneNumber = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eZoneOperation", Namespace="http://schemas.datacontract.org/2004/07/TCService.SharedDomain.SmartAction")]
    public enum eZoneOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUsed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fault = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trouble = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alarm = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lights = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Locks = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceLevel", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Implementation")]
    [System.SerializableAttribute()]
    public partial class DeviceLevel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eDeviceLevelType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eDeviceLevelType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneProgrammingCapability", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain.General")]
    [System.SerializableAttribute()]
    public partial class ZoneProgrammingCapability : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanBeExcludedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChimeProgrammableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProgrammableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartRoomMembershipEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoiceAnnunciationProgrammableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.eStringEncoding ZoneDescriptionEncodingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeExcluded {
            get {
                return this.CanBeExcludedField;
            }
            set {
                if ((this.CanBeExcludedField.Equals(value) != true)) {
                    this.CanBeExcludedField = value;
                    this.RaisePropertyChanged("CanBeExcluded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChimeProgrammable {
            get {
                return this.ChimeProgrammableField;
            }
            set {
                if ((this.ChimeProgrammableField.Equals(value) != true)) {
                    this.ChimeProgrammableField = value;
                    this.RaisePropertyChanged("ChimeProgrammable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Programmable {
            get {
                return this.ProgrammableField;
            }
            set {
                if ((this.ProgrammableField.Equals(value) != true)) {
                    this.ProgrammableField = value;
                    this.RaisePropertyChanged("Programmable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartRoomMembershipEnabled {
            get {
                return this.SmartRoomMembershipEnabledField;
            }
            set {
                if ((this.SmartRoomMembershipEnabledField.Equals(value) != true)) {
                    this.SmartRoomMembershipEnabledField = value;
                    this.RaisePropertyChanged("SmartRoomMembershipEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoiceAnnunciationProgrammable {
            get {
                return this.VoiceAnnunciationProgrammableField;
            }
            set {
                if ((this.VoiceAnnunciationProgrammableField.Equals(value) != true)) {
                    this.VoiceAnnunciationProgrammableField = value;
                    this.RaisePropertyChanged("VoiceAnnunciationProgrammable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.eStringEncoding ZoneDescriptionEncoding {
            get {
                return this.ZoneDescriptionEncodingField;
            }
            set {
                if ((this.ZoneDescriptionEncodingField.Equals(value) != true)) {
                    this.ZoneDescriptionEncodingField = value;
                    this.RaisePropertyChanged("ZoneDescriptionEncoding");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eDeviceLevelType", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eDeviceLevelType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAvailable = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorReadingLevel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LevelRead = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eStringEncoding", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain.General")]
    public enum eStringEncoding : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASCII = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnicodeUTF8 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unicode2Byte = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unicode3Byte = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eArmMode", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eArmMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Away = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TC2UserManagementRequestInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class TC2UserManagementRequestInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreviousCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestingUserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizingCode {
            get {
                return this.AuthorizingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizingCodeField, value) != true)) {
                    this.AuthorizingCodeField = value;
                    this.RaisePropertyChanged("AuthorizingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreviousCode {
            get {
                return this.PreviousCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousCodeField, value) != true)) {
                    this.PreviousCodeField = value;
                    this.RaisePropertyChanged("PreviousCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestingUserID {
            get {
                return this.RequestingUserIDField;
            }
            set {
                if ((this.RequestingUserIDField.Equals(value) != true)) {
                    this.RequestingUserIDField = value;
                    this.RaisePropertyChanged("RequestingUserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eCloudDeviceType", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eCloudDeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoneybadgerThermostat = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eArmType", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eArmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmAway = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmStay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmInstant = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmMax = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmNight = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmCustom = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eArmSubState", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eArmSubState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Away = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eArmSubStateModifier", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eArmSubStateModifier : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stay1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stay2 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eZoneStatusIdentifier", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum eZoneStatusIdentifier : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fault = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trouble = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alarm = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bypassed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LowBattery = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartitionState", Namespace="http://schemas.datacontract.org/2004/07/tcWeb")]
    [System.SerializableAttribute()]
    public partial class PartitionState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.State ArmingStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.State ArmingSubStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartitionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionStatusSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.State SubstateModifier1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.State SubstateModifier2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShabakahRedir.TCServiceReference.State SubstateModifier3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.State ArmingState {
            get {
                return this.ArmingStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmingStateField, value) != true)) {
                    this.ArmingStateField = value;
                    this.RaisePropertyChanged("ArmingState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.State ArmingSubState {
            get {
                return this.ArmingSubStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmingSubStateField, value) != true)) {
                    this.ArmingSubStateField = value;
                    this.RaisePropertyChanged("ArmingSubState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartitionID {
            get {
                return this.PartitionIDField;
            }
            set {
                if ((this.PartitionIDField.Equals(value) != true)) {
                    this.PartitionIDField = value;
                    this.RaisePropertyChanged("PartitionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionStatusSummary {
            get {
                return this.PartitionStatusSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionStatusSummaryField, value) != true)) {
                    this.PartitionStatusSummaryField = value;
                    this.RaisePropertyChanged("PartitionStatusSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.State SubstateModifier1 {
            get {
                return this.SubstateModifier1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SubstateModifier1Field, value) != true)) {
                    this.SubstateModifier1Field = value;
                    this.RaisePropertyChanged("SubstateModifier1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.State SubstateModifier2 {
            get {
                return this.SubstateModifier2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SubstateModifier2Field, value) != true)) {
                    this.SubstateModifier2Field = value;
                    this.RaisePropertyChanged("SubstateModifier2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShabakahRedir.TCServiceReference.State SubstateModifier3 {
            get {
                return this.SubstateModifier3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SubstateModifier3Field, value) != true)) {
                    this.SubstateModifier3Field = value;
                    this.RaisePropertyChanged("SubstateModifier3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/tcWeb")]
    [System.SerializableAttribute()]
    public partial class State : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateDescription {
            get {
                return this.StateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StateDescriptionField, value) != true)) {
                    this.StateDescriptionField = value;
                    this.RaisePropertyChanged("StateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ePanicType", Namespace="http://schemas.datacontract.org/2004/07/tcWeb.TC.Common")]
    public enum ePanicType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fire = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Police = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalSounder = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockStateInfo", Namespace="http://schemas.datacontract.org/2004/07/tcServiceDomain")]
    [System.SerializableAttribute()]
    public partial class LockStateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockDesiredStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockDesiredState {
            get {
                return this.LockDesiredStateField;
            }
            set {
                if ((this.LockDesiredStateField.Equals(value) != true)) {
                    this.LockDesiredStateField = value;
                    this.RaisePropertyChanged("LockDesiredState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TCServiceReference.ITCService")]
    public interface ITCService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserAdminAuthorityLevel", ReplyAction="http://tempuri.org/ITCService/GetUserAdminAuthorityLevelResponse")]
        ShabakahRedir.TCServiceReference.GetUserAdminAuthorityLevelResult GetUserAdminAuthorityLevel(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserAdminAuthorityLevel", ReplyAction="http://tempuri.org/ITCService/GetUserAdminAuthorityLevelResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetUserAdminAuthorityLevelResult> GetUserAdminAuthorityLevelAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserConfigurationSequenceNumber", ReplyAction="http://tempuri.org/ITCService/GetUserConfigurationSequenceNumberResponse")]
        ShabakahRedir.TCServiceReference.UserConfigurationSequenceNumberResult GetUserConfigurationSequenceNumber(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserConfigurationSequenceNumber", ReplyAction="http://tempuri.org/ITCService/GetUserConfigurationSequenceNumberResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.UserConfigurationSequenceNumberResult> GetUserConfigurationSequenceNumberAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SynchronizePanelUser", ReplyAction="http://tempuri.org/ITCService/SynchronizePanelUserResponse")]
        ShabakahRedir.TCServiceReference.SynchronizePanelUserResult SynchronizePanelUser(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TC2UserManagementRequestInfo UserManagementRequestInfo, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SynchronizePanelUser", ReplyAction="http://tempuri.org/ITCService/SynchronizePanelUserResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SynchronizePanelUserResult> SynchronizePanelUserAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TC2UserManagementRequestInfo UserManagementRequestInfo, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAvailableUserSlots", ReplyAction="http://tempuri.org/ITCService/GetAvailableUserSlotsResponse")]
        ShabakahRedir.TCServiceReference.GetAvailableUserSlotsResult GetAvailableUserSlots(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAvailableUserSlots", ReplyAction="http://tempuri.org/ITCService/GetAvailableUserSlotsResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAvailableUserSlotsResult> GetAvailableUserSlotsAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAPIVersion", ReplyAction="http://tempuri.org/ITCService/GetAPIVersionResponse")]
        string GetAPIVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAPIVersion", ReplyAction="http://tempuri.org/ITCService/GetAPIVersionResponse")]
        System.Threading.Tasks.Task<string> GetAPIVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartActionConfiguration", ReplyAction="http://tempuri.org/ITCService/GetSmartActionConfigurationResponse")]
        ShabakahRedir.TCServiceReference.SmartActionConfiguration GetSmartActionConfiguration(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartActionConfiguration", ReplyAction="http://tempuri.org/ITCService/GetSmartActionConfigurationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionConfiguration> GetSmartActionConfigurationAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/AddEditSmartAction", ReplyAction="http://tempuri.org/ITCService/AddEditSmartActionResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults AddEditSmartAction(string MAC, int SessionID, ShabakahRedir.TCServiceReference.SmartAction smartAction, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/AddEditSmartAction", ReplyAction="http://tempuri.org/ITCService/AddEditSmartActionResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> AddEditSmartActionAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.SmartAction smartAction, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSmartActionName", ReplyAction="http://tempuri.org/ITCService/SetSmartActionNameResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults SetSmartActionName(string MAC, int SessionID, int smartActionNumber, string name, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSmartActionName", ReplyAction="http://tempuri.org/ITCService/SetSmartActionNameResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetSmartActionNameAsync(string MAC, int SessionID, int smartActionNumber, string name, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartActionName", ReplyAction="http://tempuri.org/ITCService/GetSmartActionNameResponse")]
        ShabakahRedir.TCServiceReference.SmartActionNameResult GetSmartActionName(string MAC, int SessionID, int smartActionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartActionName", ReplyAction="http://tempuri.org/ITCService/GetSmartActionNameResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionNameResult> GetSmartActionNameAsync(string MAC, int SessionID, int smartActionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSmartActionState", ReplyAction="http://tempuri.org/ITCService/SetSmartActionStateResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults SetSmartActionState(string MAC, int SessionID, System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.eSmartActionState> stateChanges, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSmartActionState", ReplyAction="http://tempuri.org/ITCService/SetSmartActionStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetSmartActionStateAsync(string MAC, int SessionID, System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.eSmartActionState> stateChanges, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartActionState", ReplyAction="http://tempuri.org/ITCService/GetSmartActionStateResponse")]
        ShabakahRedir.TCServiceReference.SmartActionStateResult GetSmartActionState(string MAC, int SessionID, int[] smartActionNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartActionState", ReplyAction="http://tempuri.org/ITCService/GetSmartActionStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionStateResult> GetSmartActionStateAsync(string MAC, int SessionID, int[] smartActionNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteSmartAction", ReplyAction="http://tempuri.org/ITCService/DeleteSmartActionResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults DeleteSmartAction(string MAC, int SessionID, int smartActionNumber, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteSmartAction", ReplyAction="http://tempuri.org/ITCService/DeleteSmartActionResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> DeleteSmartActionAsync(string MAC, int SessionID, int smartActionNumber, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ExecuteSmartAction", ReplyAction="http://tempuri.org/ITCService/ExecuteSmartActionResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults ExecuteSmartAction(string MAC, int SessionID, int smartActionNumber, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ExecuteSmartAction", ReplyAction="http://tempuri.org/ITCService/ExecuteSmartActionResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> ExecuteSmartActionAsync(string MAC, int SessionID, int smartActionNumber, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartAction", ReplyAction="http://tempuri.org/ITCService/GetSmartActionResponse")]
        ShabakahRedir.TCServiceReference.SmartActionResult GetSmartAction(string MAC, int SessionID, int smartActionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSmartAction", ReplyAction="http://tempuri.org/ITCService/GetSmartActionResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionResult> GetSmartActionAsync(string MAC, int SessionID, int smartActionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSmartActionEditingOnPanel", ReplyAction="http://tempuri.org/ITCService/SetSmartActionEditingOnPanelResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults SetSmartActionEditingOnPanel(string MAC, int SessionID, string userCode, bool enable, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSmartActionEditingOnPanel", ReplyAction="http://tempuri.org/ITCService/SetSmartActionEditingOnPanelResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetSmartActionEditingOnPanelAsync(string MAC, int SessionID, string userCode, bool enable, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/AddCloudDeviceToken", ReplyAction="http://tempuri.org/ITCService/AddCloudDeviceTokenResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults AddCloudDeviceToken(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/AddCloudDeviceToken", ReplyAction="http://tempuri.org/ITCService/AddCloudDeviceTokenResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> AddCloudDeviceTokenAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/AuthorizeCloudDevice", ReplyAction="http://tempuri.org/ITCService/AuthorizeCloudDeviceResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults AuthorizeCloudDevice(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, int locId, string[] deviceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/AuthorizeCloudDevice", ReplyAction="http://tempuri.org/ITCService/AuthorizeCloudDeviceResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> AuthorizeCloudDeviceAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, int locId, string[] deviceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RevokeCloudDeviceToken", ReplyAction="http://tempuri.org/ITCService/RevokeCloudDeviceTokenResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults RevokeCloudDeviceToken(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RevokeCloudDeviceToken", ReplyAction="http://tempuri.org/ITCService/RevokeCloudDeviceTokenResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> RevokeCloudDeviceTokenAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ChangeCloudDeviceUrl", ReplyAction="http://tempuri.org/ITCService/ChangeCloudDeviceUrlResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults ChangeCloudDeviceUrl(string MAC, int SessionID, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ChangeCloudDeviceUrl", ReplyAction="http://tempuri.org/ITCService/ChangeCloudDeviceUrlResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> ChangeCloudDeviceUrlAsync(string MAC, int SessionID, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetBatteryLevel", ReplyAction="http://tempuri.org/ITCService/GetBatteryLevelResponse")]
        ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetBatteryLevel(string MAC, int SessionID, int[] zones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetBatteryLevel", ReplyAction="http://tempuri.org/ITCService/GetBatteryLevelResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetBatteryLevelAsync(string MAC, int SessionID, int[] zones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetBatteryLevelByZoneRange", ReplyAction="http://tempuri.org/ITCService/GetBatteryLevelByZoneRangeResponse")]
        ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetBatteryLevelByZoneRange(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetBatteryLevelByZoneRange", ReplyAction="http://tempuri.org/ITCService/GetBatteryLevelByZoneRangeResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetBatteryLevelByZoneRangeAsync(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSignalStrengthLevel", ReplyAction="http://tempuri.org/ITCService/GetSignalStrengthLevelResponse")]
        ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetSignalStrengthLevel(string MAC, int SessionID, int[] zones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSignalStrengthLevel", ReplyAction="http://tempuri.org/ITCService/GetSignalStrengthLevelResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetSignalStrengthLevelAsync(string MAC, int SessionID, int[] zones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSignalStrengthLevelByZoneRange", ReplyAction="http://tempuri.org/ITCService/GetSignalStrengthLevelByZoneRangeResponse")]
        ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetSignalStrengthLevelByZoneRange(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSignalStrengthLevelByZoneRange", ReplyAction="http://tempuri.org/ITCService/GetSignalStrengthLevelByZoneRangeResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetSignalStrengthLevelByZoneRangeAsync(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZoneProgrammingCapability", ReplyAction="http://tempuri.org/ITCService/GetZoneProgrammingCapabilityResponse")]
        ShabakahRedir.TCServiceReference.GetZoneProgrammingCapabilityResult GetZoneProgrammingCapability(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZoneProgrammingCapability", ReplyAction="http://tempuri.org/ITCService/GetZoneProgrammingCapabilityResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZoneProgrammingCapabilityResult> GetZoneProgrammingCapabilityAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetEntryDelays", ReplyAction="http://tempuri.org/ITCService/GetEntryDelaysResponse")]
        ShabakahRedir.TCServiceReference.GetEntryDelaysResult GetEntryDelays(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetEntryDelays", ReplyAction="http://tempuri.org/ITCService/GetEntryDelaysResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetEntryDelaysResult> GetEntryDelaysAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetPanelSoftwareVersion", ReplyAction="http://tempuri.org/ITCService/GetPanelSoftwareVersionResponse")]
        ShabakahRedir.TCServiceReference.GetPanelSoftwareVersionResult GetPanelSoftwareVersion(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetPanelSoftwareVersion", ReplyAction="http://tempuri.org/ITCService/GetPanelSoftwareVersionResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetPanelSoftwareVersionResult> GetPanelSoftwareVersionAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetCustomArmConfig", ReplyAction="http://tempuri.org/ITCService/GetCustomArmConfigResponse")]
        ShabakahRedir.TCServiceReference.GetCustomArmConfigResult GetCustomArmConfig(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetCustomArmConfig", ReplyAction="http://tempuri.org/ITCService/GetCustomArmConfigResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetCustomArmConfigResult> GetCustomArmConfigAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetCustomArmConfig", ReplyAction="http://tempuri.org/ITCService/SetCustomArmConfigResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults SetCustomArmConfig(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eArmMode armMode, bool entryDelay, int[] byPassZones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetCustomArmConfig", ReplyAction="http://tempuri.org/ITCService/SetCustomArmConfigResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetCustomArmConfigAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eArmMode armMode, bool entryDelay, int[] byPassZones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ArmSystem", ReplyAction="http://tempuri.org/ITCService/ArmSystemResponse")]
        ShabakahRedir.TCServiceReference.ArmSystemResult ArmSystem(string MAC, int SessionID, string userCode, int area, ShabakahRedir.TCServiceReference.eArmType armtype, string AdditionalInfo, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubState> armAwayHome, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubStateModifier> armStay1or2, System.Nullable<bool> entryDelay, int[] zonesToBypass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ArmSystem", ReplyAction="http://tempuri.org/ITCService/ArmSystemResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.ArmSystemResult> ArmSystemAsync(string MAC, int SessionID, string userCode, int area, ShabakahRedir.TCServiceReference.eArmType armtype, string AdditionalInfo, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubState> armAwayHome, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubStateModifier> armStay1or2, System.Nullable<bool> entryDelay, int[] zonesToBypass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DisarmSystem", ReplyAction="http://tempuri.org/ITCService/DisarmSystemResponse")]
        ShabakahRedir.TCServiceReference.DisarmSystemResult DisarmSystem(string MAC, int SessionID, string userCode, int area, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DisarmSystem", ReplyAction="http://tempuri.org/ITCService/DisarmSystemResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DisarmSystemResult> DisarmSystemAsync(string MAC, int SessionID, string userCode, int area, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZonesListInState", ReplyAction="http://tempuri.org/ITCService/GetZonesListInStateResponse")]
        ShabakahRedir.TCServiceReference.GetZonesListInStateResult GetZonesListInState(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZonesListInState", ReplyAction="http://tempuri.org/ITCService/GetZonesListInStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZonesListInStateResult> GetZonesListInStateAsync(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZoneListInStateWithConsoleInfo", ReplyAction="http://tempuri.org/ITCService/GetZoneListInStateWithConsoleInfoResponse")]
        ShabakahRedir.TCServiceReference.GetZoneListInStateWithConsoleInfoResult GetZoneListInStateWithConsoleInfo(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZoneListInStateWithConsoleInfo", ReplyAction="http://tempuri.org/ITCService/GetZoneListInStateWithConsoleInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZoneListInStateWithConsoleInfoResult> GetZoneListInStateWithConsoleInfoAsync(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAreaStatusObject", ReplyAction="http://tempuri.org/ITCService/GetAreaStatusObjectResponse")]
        ShabakahRedir.TCServiceReference.PartitionState GetAreaStatusObject(string MAC, int SessionID, int Area, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAreaStatusObject", ReplyAction="http://tempuri.org/ITCService/GetAreaStatusObjectResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.PartitionState> GetAreaStatusObjectAsync(string MAC, int SessionID, int Area, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAreaStat", ReplyAction="http://tempuri.org/ITCService/GetAreaStatResponse")]
        string GetAreaStat(string MAC, int SessionID, int Area, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAreaStat", ReplyAction="http://tempuri.org/ITCService/GetAreaStatResponse")]
        System.Threading.Tasks.Task<string> GetAreaStatAsync(string MAC, int SessionID, int Area, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/Bypass", ReplyAction="http://tempuri.org/ITCService/BypassResponse")]
        string Bypass(string MAC, int SessionID, int Zone, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/Bypass", ReplyAction="http://tempuri.org/ITCService/BypassResponse")]
        System.Threading.Tasks.Task<string> BypassAsync(string MAC, int SessionID, int Zone, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/OpenSession", ReplyAction="http://tempuri.org/ITCService/OpenSessionResponse")]
        int OpenSession(string MAC, int ECP, int Devtype, string Alarmnetuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/OpenSession", ReplyAction="http://tempuri.org/ITCService/OpenSessionResponse")]
        System.Threading.Tasks.Task<int> OpenSessionAsync(string MAC, int ECP, int Devtype, string Alarmnetuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/IsConnected", ReplyAction="http://tempuri.org/ITCService/IsConnectedResponse")]
        int IsConnected(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/IsConnected", ReplyAction="http://tempuri.org/ITCService/IsConnectedResponse")]
        System.Threading.Tasks.Task<int> IsConnectedAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetConnections", ReplyAction="http://tempuri.org/ITCService/GetConnectionsResponse")]
        string GetConnections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetConnections", ReplyAction="http://tempuri.org/ITCService/GetConnectionsResponse")]
        System.Threading.Tasks.Task<string> GetConnectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetLogFileLocation", ReplyAction="http://tempuri.org/ITCService/GetLogFileLocationResponse")]
        string GetLogFileLocation(string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetLogFileLocation", ReplyAction="http://tempuri.org/ITCService/GetLogFileLocationResponse")]
        System.Threading.Tasks.Task<string> GetLogFileLocationAsync(string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/Authenticate", ReplyAction="http://tempuri.org/ITCService/AuthenticateResponse")]
        bool Authenticate(string MAC, int SessionID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/Authenticate", ReplyAction="http://tempuri.org/ITCService/AuthenticateResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateAsync(string MAC, int SessionID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ReadConsoleDisplay", ReplyAction="http://tempuri.org/ITCService/ReadConsoleDisplayResponse")]
        ShabakahRedir.TCServiceReference.ReadConsoleDisplayResult ReadConsoleDisplay(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ReadConsoleDisplay", ReplyAction="http://tempuri.org/ITCService/ReadConsoleDisplayResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.ReadConsoleDisplayResult> ReadConsoleDisplayAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/CloseSession", ReplyAction="http://tempuri.org/ITCService/CloseSessionResponse")]
        void CloseSession(string MAC, int SessionID, string Aarmnetuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/CloseSession", ReplyAction="http://tempuri.org/ITCService/CloseSessionResponse")]
        System.Threading.Tasks.Task CloseSessionAsync(string MAC, int SessionID, string Aarmnetuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/PanelToCommitChanges", ReplyAction="http://tempuri.org/ITCService/PanelToCommitChangesResponse")]
        ShabakahRedir.TCServiceReference.PanelToCommitInfoResult PanelToCommitChanges(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/PanelToCommitChanges", ReplyAction="http://tempuri.org/ITCService/PanelToCommitChangesResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.PanelToCommitInfoResult> PanelToCommitChangesAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSupportedZwaveFeatures", ReplyAction="http://tempuri.org/ITCService/GetSupportedZwaveFeaturesResponse")]
        ShabakahRedir.TCServiceReference.GetSupportedZwaveFeaturesResult GetSupportedZwaveFeatures(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSupportedZwaveFeatures", ReplyAction="http://tempuri.org/ITCService/GetSupportedZwaveFeaturesResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSupportedZwaveFeaturesResult> GetSupportedZwaveFeaturesAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZwaveConfigSequenceNumber", ReplyAction="http://tempuri.org/ITCService/GetZwaveConfigSequenceNumberResponse")]
        ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumberResult GetZwaveConfigSequenceNumber(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZwaveConfigSequenceNumber", ReplyAction="http://tempuri.org/ITCService/GetZwaveConfigSequenceNumberResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumberResult> GetZwaveConfigSequenceNumberAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetPanelLanguageConfiguration", ReplyAction="http://tempuri.org/ITCService/GetPanelLanguageConfigurationResponse")]
        ShabakahRedir.TCServiceReference.GetPanelLanguaageCapabilityResult GetPanelLanguageConfiguration(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetPanelLanguageConfiguration", ReplyAction="http://tempuri.org/ITCService/GetPanelLanguageConfigurationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetPanelLanguaageCapabilityResult> GetPanelLanguageConfigurationAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetArmingModes", ReplyAction="http://tempuri.org/ITCService/GetArmingModesResponse")]
        ShabakahRedir.TCServiceReference.GetArmingModesResult GetArmingModes(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetArmingModes", ReplyAction="http://tempuri.org/ITCService/GetArmingModesResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetArmingModesResult> GetArmingModesAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetNumberOfPartitions", ReplyAction="http://tempuri.org/ITCService/GetNumberOfPartitionsResponse")]
        int GetNumberOfPartitions(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetNumberOfPartitions", ReplyAction="http://tempuri.org/ITCService/GetNumberOfPartitionsResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfPartitionsAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetInstaller", ReplyAction="http://tempuri.org/ITCService/GetInstallerResponse")]
        string GetInstaller(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetInstaller", ReplyAction="http://tempuri.org/ITCService/GetInstallerResponse")]
        System.Threading.Tasks.Task<string> GetInstallerAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetHardwareName", ReplyAction="http://tempuri.org/ITCService/GetHardwareNameResponse")]
        string GetHardwareName(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetHardwareName", ReplyAction="http://tempuri.org/ITCService/GetHardwareNameResponse")]
        System.Threading.Tasks.Task<string> GetHardwareNameAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetVersion", ReplyAction="http://tempuri.org/ITCService/GetVersionResponse")]
        string GetVersion(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetVersion", ReplyAction="http://tempuri.org/ITCService/GetVersionResponse")]
        System.Threading.Tasks.Task<string> GetVersionAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSequenceNumber", ReplyAction="http://tempuri.org/ITCService/GetSequenceNumberResponse")]
        int GetSequenceNumber(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSequenceNumber", ReplyAction="http://tempuri.org/ITCService/GetSequenceNumberResponse")]
        System.Threading.Tasks.Task<int> GetSequenceNumberAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetCommandInProgressToNone", ReplyAction="http://tempuri.org/ITCService/SetCommandInProgressToNoneResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults SetCommandInProgressToNone(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetCommandInProgressToNone", ReplyAction="http://tempuri.org/ITCService/SetCommandInProgressToNoneResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetCommandInProgressToNoneAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetCommandInProgress", ReplyAction="http://tempuri.org/ITCService/GetCommandInProgressResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults GetCommandInProgress(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetCommandInProgress", ReplyAction="http://tempuri.org/ITCService/GetCommandInProgressResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> GetCommandInProgressAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetNumberOfZones", ReplyAction="http://tempuri.org/ITCService/GetNumberOfZonesResponse")]
        int GetNumberOfZones(string MAC, int SessionID, int PartitionIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetNumberOfZones", ReplyAction="http://tempuri.org/ITCService/GetNumberOfZonesResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfZonesAsync(string MAC, int SessionID, int PartitionIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetHomeArea", ReplyAction="http://tempuri.org/ITCService/GetHomeAreaResponse")]
        int GetHomeArea(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetHomeArea", ReplyAction="http://tempuri.org/ITCService/GetHomeAreaResponse")]
        System.Threading.Tasks.Task<int> GetHomeAreaAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SendKey", ReplyAction="http://tempuri.org/ITCService/SendKeyResponse")]
        void SendKey(string MAC, int SessionID, char PressedKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SendKey", ReplyAction="http://tempuri.org/ITCService/SendKeyResponse")]
        System.Threading.Tasks.Task SendKeyAsync(string MAC, int SessionID, char PressedKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SendMacro", ReplyAction="http://tempuri.org/ITCService/SendMacroResponse")]
        bool SendMacro(string MAC, int SessionID, string macroSeq, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SendMacro", ReplyAction="http://tempuri.org/ITCService/SendMacroResponse")]
        System.Threading.Tasks.Task<bool> SendMacroAsync(string MAC, int SessionID, string macroSeq, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ImportZoneInfo", ReplyAction="http://tempuri.org/ITCService/ImportZoneInfoResponse")]
        ShabakahRedir.TCServiceReference.ImportZoneInfoResult ImportZoneInfo(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ImportZoneInfo", ReplyAction="http://tempuri.org/ITCService/ImportZoneInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.ImportZoneInfoResult> ImportZoneInfoAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZoneUnicode", ReplyAction="http://tempuri.org/ITCService/GetZoneUnicodeResponse")]
        ShabakahRedir.TCServiceReference.GetZoneInformationResult GetZoneUnicode(string MAC, int SessionID, int PartitionIndex, int ZoneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetZoneUnicode", ReplyAction="http://tempuri.org/ITCService/GetZoneUnicodeResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZoneInformationResult> GetZoneUnicodeAsync(string MAC, int SessionID, int PartitionIndex, int ZoneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSupportedChimes", ReplyAction="http://tempuri.org/ITCService/GetSupportedChimesResponse")]
        ShabakahRedir.TCServiceReference.GetSupportedChimesResult GetSupportedChimes(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSupportedChimes", ReplyAction="http://tempuri.org/ITCService/GetSupportedChimesResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSupportedChimesResult> GetSupportedChimesAsync(string MAC, int SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetLastCommandState", ReplyAction="http://tempuri.org/ITCService/GetLastCommandStateResponse")]
        string GetLastCommandState(string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetLastCommandState", ReplyAction="http://tempuri.org/ITCService/GetLastCommandStateResponse")]
        System.Threading.Tasks.Task<string> GetLastCommandStateAsync(string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SendPanic", ReplyAction="http://tempuri.org/ITCService/SendPanicResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults SendPanic(string MAC, int SessionID, int area, ShabakahRedir.TCServiceReference.ePanicType[] panicTypesToSend, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SendPanic", ReplyAction="http://tempuri.org/ITCService/SendPanicResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SendPanicAsync(string MAC, int SessionID, int area, ShabakahRedir.TCServiceReference.ePanicType[] panicTypesToSend, string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetPanelFeatureSet2Info", ReplyAction="http://tempuri.org/ITCService/GetPanelFeatureSet2InfoResponse")]
        ShabakahRedir.TCServiceReference.PanelFeatureSet2Result GetPanelFeatureSet2Info(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetPanelFeatureSet2Info", ReplyAction="http://tempuri.org/ITCService/GetPanelFeatureSet2InfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.PanelFeatureSet2Result> GetPanelFeatureSet2InfoAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetCurrentTCServiceInstanceStatus", ReplyAction="http://tempuri.org/ITCService/GetCurrentTCServiceInstanceStatusResponse")]
        ShabakahRedir.TCServiceReference.TCServiceInstanceStatusResult GetCurrentTCServiceInstanceStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetCurrentTCServiceInstanceStatus", ReplyAction="http://tempuri.org/ITCService/GetCurrentTCServiceInstanceStatusResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.TCServiceInstanceStatusResult> GetCurrentTCServiceInstanceStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/StartUpCurrentTCServiceInstance", ReplyAction="http://tempuri.org/ITCService/StartUpCurrentTCServiceInstanceResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults StartUpCurrentTCServiceInstance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/StartUpCurrentTCServiceInstance", ReplyAction="http://tempuri.org/ITCService/StartUpCurrentTCServiceInstanceResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> StartUpCurrentTCServiceInstanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ShutDownCurrentTCServiceInstance", ReplyAction="http://tempuri.org/ITCService/ShutDownCurrentTCServiceInstanceResponse")]
        ShabakahRedir.TCServiceReference.WebMethodResults ShutDownCurrentTCServiceInstance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/ShutDownCurrentTCServiceInstance", ReplyAction="http://tempuri.org/ITCService/ShutDownCurrentTCServiceInstanceResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> ShutDownCurrentTCServiceInstanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SynchronizeSecurityPanel", ReplyAction="http://tempuri.org/ITCService/SynchronizeSecurityPanelResponse")]
        ShabakahRedir.TCServiceReference.SynchronizeSecurityPanelResult SynchronizeSecurityPanel(string MAC, int SessionID, string InstallerCode, string UserCode, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SynchronizeSecurityPanel", ReplyAction="http://tempuri.org/ITCService/SynchronizeSecurityPanelResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SynchronizeSecurityPanelResult> SynchronizeSecurityPanelAsync(string MAC, int SessionID, string InstallerCode, string UserCode, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAutomationNetworkStatus", ReplyAction="http://tempuri.org/ITCService/GetAutomationNetworkStatusResponse")]
        ShabakahRedir.TCServiceReference.GetAutomationNetworkStatusResult GetAutomationNetworkStatus(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAutomationNetworkStatus", ReplyAction="http://tempuri.org/ITCService/GetAutomationNetworkStatusResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAutomationNetworkStatusResult> GetAutomationNetworkStatusAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetNumberOfAutomationDevicesInState", ReplyAction="http://tempuri.org/ITCService/GetNumberOfAutomationDevicesInStateResponse")]
        ShabakahRedir.TCServiceReference.GetNumberOfAutomationDeviceInStateResult GetNumberOfAutomationDevicesInState(string MAC, int SessionID, int DeviceState, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetNumberOfAutomationDevicesInState", ReplyAction="http://tempuri.org/ITCService/GetNumberOfAutomationDevicesInStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetNumberOfAutomationDeviceInStateResult> GetNumberOfAutomationDevicesInStateAsync(string MAC, int SessionID, int DeviceState, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAutomationDevicesListInState", ReplyAction="http://tempuri.org/ITCService/GetAutomationDevicesListInStateResponse")]
        ShabakahRedir.TCServiceReference.GetAutomationDeviceListResult GetAutomationDevicesListInState(string MAC, int SessionID, int DeviceState, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAutomationDevicesListInState", ReplyAction="http://tempuri.org/ITCService/GetAutomationDevicesListInStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAutomationDeviceListResult> GetAutomationDevicesListInStateAsync(string MAC, int SessionID, int DeviceState, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAllAutomationDeviceState", ReplyAction="http://tempuri.org/ITCService/GetAllAutomationDeviceStateResponse")]
        ShabakahRedir.TCServiceReference.GetAllAutomationDeviceStateResult GetAllAutomationDeviceState(string MAC, int SessionID, int StartIndex, int EndIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAllAutomationDeviceState", ReplyAction="http://tempuri.org/ITCService/GetAllAutomationDeviceStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAllAutomationDeviceStateResult> GetAllAutomationDeviceStateAsync(string MAC, int SessionID, int StartIndex, int EndIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetGeneralSwitchInfo", ReplyAction="http://tempuri.org/ITCService/GetGeneralSwitchInfoResponse")]
        ShabakahRedir.TCServiceReference.GetGeneralSwitchInfoResult GetGeneralSwitchInfo(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetGeneralSwitchInfo", ReplyAction="http://tempuri.org/ITCService/GetGeneralSwitchInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetGeneralSwitchInfoResult> GetGeneralSwitchInfoAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetIndividualSwitchInfo", ReplyAction="http://tempuri.org/ITCService/GetIndividualSwitchInfoResponse")]
        ShabakahRedir.TCServiceReference.GetZWaveSwitchInfoResult GetIndividualSwitchInfo(string MAC, int SessionID, int SwitchInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetIndividualSwitchInfo", ReplyAction="http://tempuri.org/ITCService/GetIndividualSwitchInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZWaveSwitchInfoResult> GetIndividualSwitchInfoAsync(string MAC, int SessionID, int SwitchInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSwitchCurrentState", ReplyAction="http://tempuri.org/ITCService/GetSwitchCurrentStateResponse")]
        ShabakahRedir.TCServiceReference.GetSwitchCurrentStateResult GetSwitchCurrentState(string MAC, int SessionID, int[] SwitchIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSwitchCurrentState", ReplyAction="http://tempuri.org/ITCService/GetSwitchCurrentStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSwitchCurrentStateResult> GetSwitchCurrentStateAsync(string MAC, int SessionID, int[] SwitchIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSwitchState", ReplyAction="http://tempuri.org/ITCService/SetSwitchStateResponse")]
        ShabakahRedir.TCServiceReference.SetSwitchStateResult SetSwitchState(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.SwitchStateInfo[] SwitchStateInfo, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSwitchState", ReplyAction="http://tempuri.org/ITCService/SetSwitchStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetSwitchStateResult> SetSwitchStateAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.SwitchStateInfo[] SwitchStateInfo, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RenameSwitch", ReplyAction="http://tempuri.org/ITCService/RenameSwitchResponse")]
        ShabakahRedir.TCServiceReference.RenameSwitchResult RenameSwitch(string MAC, int SessionID, string AuthorizingCode, int SwitchIndex, string SwitchName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RenameSwitch", ReplyAction="http://tempuri.org/ITCService/RenameSwitchResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RenameSwitchResult> RenameSwitchAsync(string MAC, int SessionID, string AuthorizingCode, int SwitchIndex, string SwitchName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetGeneralLockInfo", ReplyAction="http://tempuri.org/ITCService/GetGeneralLockInfoResponse")]
        ShabakahRedir.TCServiceReference.GetGeneralLockInfoResult GetGeneralLockInfo(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetGeneralLockInfo", ReplyAction="http://tempuri.org/ITCService/GetGeneralLockInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetGeneralLockInfoResult> GetGeneralLockInfoAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetIndividualLockInfo", ReplyAction="http://tempuri.org/ITCService/GetIndividualLockInfoResponse")]
        ShabakahRedir.TCServiceReference.GetIndividualLockInfoResult GetIndividualLockInfo(string MAC, int SessionID, int LockInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetIndividualLockInfo", ReplyAction="http://tempuri.org/ITCService/GetIndividualLockInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetIndividualLockInfoResult> GetIndividualLockInfoAsync(string MAC, int SessionID, int LockInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetLockCurrentState", ReplyAction="http://tempuri.org/ITCService/GetLockCurrentStateResponse")]
        ShabakahRedir.TCServiceReference.GetLockCurrentStateResult GetLockCurrentState(string MAC, int SessionID, int[] LockIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetLockCurrentState", ReplyAction="http://tempuri.org/ITCService/GetLockCurrentStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetLockCurrentStateResult> GetLockCurrentStateAsync(string MAC, int SessionID, int[] LockIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetLockState", ReplyAction="http://tempuri.org/ITCService/SetLockStateResponse")]
        ShabakahRedir.TCServiceReference.SetLockStateResult SetLockState(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.LockStateInfo[] LockStateInfo, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetLockState", ReplyAction="http://tempuri.org/ITCService/SetLockStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetLockStateResult> SetLockStateAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.LockStateInfo[] LockStateInfo, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RenameLock", ReplyAction="http://tempuri.org/ITCService/RenameLockResponse")]
        ShabakahRedir.TCServiceReference.RenameLockResult RenameLock(string MAC, int SessionID, string AuthorizingCode, int LockIndex, string LockName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RenameLock", ReplyAction="http://tempuri.org/ITCService/RenameLockResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RenameLockResult> RenameLockAsync(string MAC, int SessionID, string AuthorizingCode, int LockIndex, string LockName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetGeneralThermostatInfo", ReplyAction="http://tempuri.org/ITCService/GetGeneralThermostatInfoResponse")]
        ShabakahRedir.TCServiceReference.GetGeneralThermostatInfoResult GetGeneralThermostatInfo(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetGeneralThermostatInfo", ReplyAction="http://tempuri.org/ITCService/GetGeneralThermostatInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetGeneralThermostatInfoResult> GetGeneralThermostatInfoAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetIndividualThermostatInfo", ReplyAction="http://tempuri.org/ITCService/GetIndividualThermostatInfoResponse")]
        ShabakahRedir.TCServiceReference.GetIndividualThermostatInfoResult GetIndividualThermostatInfo(string MAC, int SessionID, int ThermostatInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetIndividualThermostatInfo", ReplyAction="http://tempuri.org/ITCService/GetIndividualThermostatInfoResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetIndividualThermostatInfoResult> GetIndividualThermostatInfoAsync(string MAC, int SessionID, int ThermostatInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetThermostatCurrentState", ReplyAction="http://tempuri.org/ITCService/GetThermostatCurrentStateResponse")]
        ShabakahRedir.TCServiceReference.GetThermostatCurrentStateResult GetThermostatCurrentState(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetThermostatCurrentState", ReplyAction="http://tempuri.org/ITCService/GetThermostatCurrentStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetThermostatCurrentStateResult> GetThermostatCurrentStateAsync(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetThermostatCurrentStateEx", ReplyAction="http://tempuri.org/ITCService/GetThermostatCurrentStateExResponse")]
        ShabakahRedir.TCServiceReference.GetThermostatCurrentStateExResult GetThermostatCurrentStateEx(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetThermostatCurrentStateEx", ReplyAction="http://tempuri.org/ITCService/GetThermostatCurrentStateExResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetThermostatCurrentStateExResult> GetThermostatCurrentStateExAsync(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetThermostatState", ReplyAction="http://tempuri.org/ITCService/SetThermostatStateResponse")]
        ShabakahRedir.TCServiceReference.SetThermostatStateResult SetThermostatState(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Thermostat[] ThermostatInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetThermostatState", ReplyAction="http://tempuri.org/ITCService/SetThermostatStateResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetThermostatStateResult> SetThermostatStateAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Thermostat[] ThermostatInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RenameThermostat", ReplyAction="http://tempuri.org/ITCService/RenameThermostatResponse")]
        ShabakahRedir.TCServiceReference.RenameThermostatResult RenameThermostat(string MAC, int SessionID, string AuthorizingCode, int ThermostatIndex, string ThermostatName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RenameThermostat", ReplyAction="http://tempuri.org/ITCService/RenameThermostatResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RenameThermostatResult> RenameThermostatAsync(string MAC, int SessionID, string AuthorizingCode, int ThermostatIndex, string ThermostatName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSceneConfiguration", ReplyAction="http://tempuri.org/ITCService/GetSceneConfigurationResponse")]
        ShabakahRedir.TCServiceReference.GetSceneConfigurationResult GetSceneConfiguration(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSceneConfiguration", ReplyAction="http://tempuri.org/ITCService/GetSceneConfigurationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSceneConfigurationResult> GetSceneConfigurationAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetScene", ReplyAction="http://tempuri.org/ITCService/SetSceneResponse")]
        ShabakahRedir.TCServiceReference.SetSceneResult SetScene(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Scene SceneInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetScene", ReplyAction="http://tempuri.org/ITCService/SetSceneResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetSceneResult> SetSceneAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Scene SceneInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetScene", ReplyAction="http://tempuri.org/ITCService/GetSceneResponse")]
        ShabakahRedir.TCServiceReference.GetSceneResult GetScene(string MAC, int SessionID, int SceneInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetScene", ReplyAction="http://tempuri.org/ITCService/GetSceneResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSceneResult> GetSceneAsync(string MAC, int SessionID, int SceneInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RunScene", ReplyAction="http://tempuri.org/ITCService/RunSceneResponse")]
        ShabakahRedir.TCServiceReference.RunSceneResult RunScene(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/RunScene", ReplyAction="http://tempuri.org/ITCService/RunSceneResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RunSceneResult> RunSceneAsync(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteScene", ReplyAction="http://tempuri.org/ITCService/DeleteSceneResponse")]
        ShabakahRedir.TCServiceReference.DeleteSceneResult DeleteScene(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteScene", ReplyAction="http://tempuri.org/ITCService/DeleteSceneResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteSceneResult> DeleteSceneAsync(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSceneName", ReplyAction="http://tempuri.org/ITCService/GetSceneNameResponse")]
        ShabakahRedir.TCServiceReference.GetSceneNameResult GetSceneName(string MAC, int SessionID, int SceneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetSceneName", ReplyAction="http://tempuri.org/ITCService/GetSceneNameResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSceneNameResult> GetSceneNameAsync(string MAC, int SessionID, int SceneIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSceneName", ReplyAction="http://tempuri.org/ITCService/SetSceneNameResponse")]
        ShabakahRedir.TCServiceReference.SetSceneNameResult SetSceneName(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string SceneName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSceneName", ReplyAction="http://tempuri.org/ITCService/SetSceneNameResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetSceneNameResult> SetSceneNameAsync(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string SceneName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetRuleConfiguration", ReplyAction="http://tempuri.org/ITCService/GetRuleConfigurationResponse")]
        ShabakahRedir.TCServiceReference.GetRuleConfigurationResult GetRuleConfiguration(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetRuleConfiguration", ReplyAction="http://tempuri.org/ITCService/GetRuleConfigurationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetRuleConfigurationResult> GetRuleConfigurationAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteRule", ReplyAction="http://tempuri.org/ITCService/DeleteRuleResponse")]
        ShabakahRedir.TCServiceReference.DeleteRuleResult DeleteRule(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteRule", ReplyAction="http://tempuri.org/ITCService/DeleteRuleResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteRuleResult> DeleteRuleAsync(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetRuleInformation", ReplyAction="http://tempuri.org/ITCService/GetRuleInformationResponse")]
        ShabakahRedir.TCServiceReference.GetRuleInformationResult GetRuleInformation(string MAC, int SessionID, int RuleInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetRuleInformation", ReplyAction="http://tempuri.org/ITCService/GetRuleInformationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetRuleInformationResult> GetRuleInformationAsync(string MAC, int SessionID, int RuleInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetRule", ReplyAction="http://tempuri.org/ITCService/SetRuleResponse")]
        ShabakahRedir.TCServiceReference.SetRuleResult SetRule(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.EventAction RuleInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetRule", ReplyAction="http://tempuri.org/ITCService/SetRuleResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetRuleResult> SetRuleAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.EventAction RuleInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetRuleName", ReplyAction="http://tempuri.org/ITCService/GetRuleNameResponse")]
        ShabakahRedir.TCServiceReference.GetRuleNameResult GetRuleName(string MAC, int SessionID, int RuleIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetRuleName", ReplyAction="http://tempuri.org/ITCService/GetRuleNameResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetRuleNameResult> GetRuleNameAsync(string MAC, int SessionID, int RuleIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetRuleName", ReplyAction="http://tempuri.org/ITCService/SetRuleNameResponse")]
        ShabakahRedir.TCServiceReference.SetRuleNameResult SetRuleName(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string RuleName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetRuleName", ReplyAction="http://tempuri.org/ITCService/SetRuleNameResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetRuleNameResult> SetRuleNameAsync(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string RuleName, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetScheduleConfiguration", ReplyAction="http://tempuri.org/ITCService/GetScheduleConfigurationResponse")]
        ShabakahRedir.TCServiceReference.GetScheduleConfigurationResult GetScheduleConfiguration(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetScheduleConfiguration", ReplyAction="http://tempuri.org/ITCService/GetScheduleConfigurationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetScheduleConfigurationResult> GetScheduleConfigurationAsync(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteSchedule", ReplyAction="http://tempuri.org/ITCService/DeleteScheduleResponse")]
        ShabakahRedir.TCServiceReference.DeleteScheduleResult DeleteSchedule(string MAC, int SessionID, string AuthorizingCode, int ScheduleIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteSchedule", ReplyAction="http://tempuri.org/ITCService/DeleteScheduleResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteScheduleResult> DeleteScheduleAsync(string MAC, int SessionID, string AuthorizingCode, int ScheduleIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetScheduleInformation", ReplyAction="http://tempuri.org/ITCService/GetScheduleInformationResponse")]
        ShabakahRedir.TCServiceReference.GetScheduleInformationResult GetScheduleInformation(string MAC, int SessionID, int ScheduleInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetScheduleInformation", ReplyAction="http://tempuri.org/ITCService/GetScheduleInformationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetScheduleInformationResult> GetScheduleInformationAsync(string MAC, int SessionID, int ScheduleInstance, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSchedule", ReplyAction="http://tempuri.org/ITCService/SetScheduleResponse")]
        ShabakahRedir.TCServiceReference.SetScheduleResult SetSchedule(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Schedule ScheduleInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetSchedule", ReplyAction="http://tempuri.org/ITCService/SetScheduleResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetScheduleResult> SetScheduleAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Schedule ScheduleInformation, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetTemperatureSchedule", ReplyAction="http://tempuri.org/ITCService/GetTemperatureScheduleResponse")]
        ShabakahRedir.TCServiceReference.GetTemperatureScheduleResult GetTemperatureSchedule(string MAC, int SessionID, int ThermostatIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetTemperatureSchedule", ReplyAction="http://tempuri.org/ITCService/GetTemperatureScheduleResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetTemperatureScheduleResult> GetTemperatureScheduleAsync(string MAC, int SessionID, int ThermostatIndex, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetTemperatureSchedule", ReplyAction="http://tempuri.org/ITCService/SetTemperatureScheduleResponse")]
        ShabakahRedir.TCServiceReference.SetTemperatureScheduleResult SetTemperatureSchedule(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TemperatureSchedule TemperatureSchedule, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SetTemperatureSchedule", ReplyAction="http://tempuri.org/ITCService/SetTemperatureScheduleResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetTemperatureScheduleResult> SetTemperatureScheduleAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TemperatureSchedule TemperatureSchedule, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserBySlotNumber", ReplyAction="http://tempuri.org/ITCService/GetUserBySlotNumberResponse")]
        ShabakahRedir.TCServiceReference.GetUserBySlotResult GetUserBySlotNumber(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, int PartitionNumber, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserBySlotNumber", ReplyAction="http://tempuri.org/ITCService/GetUserBySlotNumberResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetUserBySlotResult> GetUserBySlotNumberAsync(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, int PartitionNumber, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SaveUserInformation", ReplyAction="http://tempuri.org/ITCService/SaveUserInformationResponse")]
        ShabakahRedir.TCServiceReference.SaveUserResult SaveUserInformation(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SaveUserInformation", ReplyAction="http://tempuri.org/ITCService/SaveUserInformationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SaveUserResult> SaveUserInformationAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SaveUserInformationEx", ReplyAction="http://tempuri.org/ITCService/SaveUserInformationExResponse")]
        ShabakahRedir.TCServiceReference.SaveUserResult SaveUserInformationEx(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/SaveUserInformationEx", ReplyAction="http://tempuri.org/ITCService/SaveUserInformationExResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SaveUserResult> SaveUserInformationExAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteUserBySlotNumber", ReplyAction="http://tempuri.org/ITCService/DeleteUserBySlotNumberResponse")]
        ShabakahRedir.TCServiceReference.DeleteUserResult DeleteUserBySlotNumber(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/DeleteUserBySlotNumber", ReplyAction="http://tempuri.org/ITCService/DeleteUserBySlotNumberResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteUserResult> DeleteUserBySlotNumberAsync(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserSlotRange", ReplyAction="http://tempuri.org/ITCService/GetUserSlotRangeResponse")]
        ShabakahRedir.TCServiceReference.GetUserSlotRangeResult GetUserSlotRange(string MAC, int SessionID, string AuthorizingCode, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetUserSlotRange", ReplyAction="http://tempuri.org/ITCService/GetUserSlotRangeResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetUserSlotRangeResult> GetUserSlotRangeAsync(string MAC, int SessionID, string AuthorizingCode, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAuthorityLevelConfiguration", ReplyAction="http://tempuri.org/ITCService/GetAuthorityLevelConfigurationResponse")]
        ShabakahRedir.TCServiceReference.GetAuthorityLevelConfigurationResult GetAuthorityLevelConfiguration(string MAC, int SessionID, string AdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCService/GetAuthorityLevelConfiguration", ReplyAction="http://tempuri.org/ITCService/GetAuthorityLevelConfigurationResponse")]
        System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAuthorityLevelConfigurationResult> GetAuthorityLevelConfigurationAsync(string MAC, int SessionID, string AdditionalInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITCServiceChannel : ShabakahRedir.TCServiceReference.ITCService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TCServiceClient : System.ServiceModel.ClientBase<ShabakahRedir.TCServiceReference.ITCService>, ShabakahRedir.TCServiceReference.ITCService {
        
        public TCServiceClient() {
        }
        
        public TCServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TCServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TCServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TCServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ShabakahRedir.TCServiceReference.GetUserAdminAuthorityLevelResult GetUserAdminAuthorityLevel(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetUserAdminAuthorityLevel(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetUserAdminAuthorityLevelResult> GetUserAdminAuthorityLevelAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetUserAdminAuthorityLevelAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.UserConfigurationSequenceNumberResult GetUserConfigurationSequenceNumber(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetUserConfigurationSequenceNumber(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.UserConfigurationSequenceNumberResult> GetUserConfigurationSequenceNumberAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetUserConfigurationSequenceNumberAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SynchronizePanelUserResult SynchronizePanelUser(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TC2UserManagementRequestInfo UserManagementRequestInfo, string AdditionalInfo) {
            return base.Channel.SynchronizePanelUser(MAC, SessionID, AuthorizingCode, UserManagementRequestInfo, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SynchronizePanelUserResult> SynchronizePanelUserAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TC2UserManagementRequestInfo UserManagementRequestInfo, string AdditionalInfo) {
            return base.Channel.SynchronizePanelUserAsync(MAC, SessionID, AuthorizingCode, UserManagementRequestInfo, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetAvailableUserSlotsResult GetAvailableUserSlots(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetAvailableUserSlots(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAvailableUserSlotsResult> GetAvailableUserSlotsAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetAvailableUserSlotsAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public string GetAPIVersion() {
            return base.Channel.GetAPIVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetAPIVersionAsync() {
            return base.Channel.GetAPIVersionAsync();
        }
        
        public ShabakahRedir.TCServiceReference.SmartActionConfiguration GetSmartActionConfiguration(string MAC, int SessionID) {
            return base.Channel.GetSmartActionConfiguration(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionConfiguration> GetSmartActionConfigurationAsync(string MAC, int SessionID) {
            return base.Channel.GetSmartActionConfigurationAsync(MAC, SessionID);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults AddEditSmartAction(string MAC, int SessionID, ShabakahRedir.TCServiceReference.SmartAction smartAction, string userCode) {
            return base.Channel.AddEditSmartAction(MAC, SessionID, smartAction, userCode);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> AddEditSmartActionAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.SmartAction smartAction, string userCode) {
            return base.Channel.AddEditSmartActionAsync(MAC, SessionID, smartAction, userCode);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults SetSmartActionName(string MAC, int SessionID, int smartActionNumber, string name, string userCode) {
            return base.Channel.SetSmartActionName(MAC, SessionID, smartActionNumber, name, userCode);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetSmartActionNameAsync(string MAC, int SessionID, int smartActionNumber, string name, string userCode) {
            return base.Channel.SetSmartActionNameAsync(MAC, SessionID, smartActionNumber, name, userCode);
        }
        
        public ShabakahRedir.TCServiceReference.SmartActionNameResult GetSmartActionName(string MAC, int SessionID, int smartActionNumber) {
            return base.Channel.GetSmartActionName(MAC, SessionID, smartActionNumber);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionNameResult> GetSmartActionNameAsync(string MAC, int SessionID, int smartActionNumber) {
            return base.Channel.GetSmartActionNameAsync(MAC, SessionID, smartActionNumber);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults SetSmartActionState(string MAC, int SessionID, System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.eSmartActionState> stateChanges, string userCode) {
            return base.Channel.SetSmartActionState(MAC, SessionID, stateChanges, userCode);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetSmartActionStateAsync(string MAC, int SessionID, System.Collections.Generic.Dictionary<int, ShabakahRedir.TCServiceReference.eSmartActionState> stateChanges, string userCode) {
            return base.Channel.SetSmartActionStateAsync(MAC, SessionID, stateChanges, userCode);
        }
        
        public ShabakahRedir.TCServiceReference.SmartActionStateResult GetSmartActionState(string MAC, int SessionID, int[] smartActionNumbers) {
            return base.Channel.GetSmartActionState(MAC, SessionID, smartActionNumbers);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionStateResult> GetSmartActionStateAsync(string MAC, int SessionID, int[] smartActionNumbers) {
            return base.Channel.GetSmartActionStateAsync(MAC, SessionID, smartActionNumbers);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults DeleteSmartAction(string MAC, int SessionID, int smartActionNumber, string userCode) {
            return base.Channel.DeleteSmartAction(MAC, SessionID, smartActionNumber, userCode);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> DeleteSmartActionAsync(string MAC, int SessionID, int smartActionNumber, string userCode) {
            return base.Channel.DeleteSmartActionAsync(MAC, SessionID, smartActionNumber, userCode);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults ExecuteSmartAction(string MAC, int SessionID, int smartActionNumber, string userCode) {
            return base.Channel.ExecuteSmartAction(MAC, SessionID, smartActionNumber, userCode);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> ExecuteSmartActionAsync(string MAC, int SessionID, int smartActionNumber, string userCode) {
            return base.Channel.ExecuteSmartActionAsync(MAC, SessionID, smartActionNumber, userCode);
        }
        
        public ShabakahRedir.TCServiceReference.SmartActionResult GetSmartAction(string MAC, int SessionID, int smartActionNumber) {
            return base.Channel.GetSmartAction(MAC, SessionID, smartActionNumber);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SmartActionResult> GetSmartActionAsync(string MAC, int SessionID, int smartActionNumber) {
            return base.Channel.GetSmartActionAsync(MAC, SessionID, smartActionNumber);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults SetSmartActionEditingOnPanel(string MAC, int SessionID, string userCode, bool enable, string AdditionalInfo) {
            return base.Channel.SetSmartActionEditingOnPanel(MAC, SessionID, userCode, enable, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetSmartActionEditingOnPanelAsync(string MAC, int SessionID, string userCode, bool enable, string AdditionalInfo) {
            return base.Channel.SetSmartActionEditingOnPanelAsync(MAC, SessionID, userCode, enable, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults AddCloudDeviceToken(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken) {
            return base.Channel.AddCloudDeviceToken(MAC, SessionID, cloudDeviceType, appToken, authToken);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> AddCloudDeviceTokenAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken) {
            return base.Channel.AddCloudDeviceTokenAsync(MAC, SessionID, cloudDeviceType, appToken, authToken);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults AuthorizeCloudDevice(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, int locId, string[] deviceIds) {
            return base.Channel.AuthorizeCloudDevice(MAC, SessionID, cloudDeviceType, locId, deviceIds);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> AuthorizeCloudDeviceAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, int locId, string[] deviceIds) {
            return base.Channel.AuthorizeCloudDeviceAsync(MAC, SessionID, cloudDeviceType, locId, deviceIds);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults RevokeCloudDeviceToken(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken) {
            return base.Channel.RevokeCloudDeviceToken(MAC, SessionID, cloudDeviceType, appToken, authToken);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> RevokeCloudDeviceTokenAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eCloudDeviceType cloudDeviceType, string appToken, string authToken) {
            return base.Channel.RevokeCloudDeviceTokenAsync(MAC, SessionID, cloudDeviceType, appToken, authToken);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults ChangeCloudDeviceUrl(string MAC, int SessionID, string url) {
            return base.Channel.ChangeCloudDeviceUrl(MAC, SessionID, url);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> ChangeCloudDeviceUrlAsync(string MAC, int SessionID, string url) {
            return base.Channel.ChangeCloudDeviceUrlAsync(MAC, SessionID, url);
        }
        
        public ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetBatteryLevel(string MAC, int SessionID, int[] zones) {
            return base.Channel.GetBatteryLevel(MAC, SessionID, zones);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetBatteryLevelAsync(string MAC, int SessionID, int[] zones) {
            return base.Channel.GetBatteryLevelAsync(MAC, SessionID, zones);
        }
        
        public ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetBatteryLevelByZoneRange(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd) {
            return base.Channel.GetBatteryLevelByZoneRange(MAC, SessionID, zoneRangeStart, zoneRangeEnd);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetBatteryLevelByZoneRangeAsync(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd) {
            return base.Channel.GetBatteryLevelByZoneRangeAsync(MAC, SessionID, zoneRangeStart, zoneRangeEnd);
        }
        
        public ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetSignalStrengthLevel(string MAC, int SessionID, int[] zones) {
            return base.Channel.GetSignalStrengthLevel(MAC, SessionID, zones);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetSignalStrengthLevelAsync(string MAC, int SessionID, int[] zones) {
            return base.Channel.GetSignalStrengthLevelAsync(MAC, SessionID, zones);
        }
        
        public ShabakahRedir.TCServiceReference.GetDeviceLevelResult GetSignalStrengthLevelByZoneRange(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd) {
            return base.Channel.GetSignalStrengthLevelByZoneRange(MAC, SessionID, zoneRangeStart, zoneRangeEnd);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetDeviceLevelResult> GetSignalStrengthLevelByZoneRangeAsync(string MAC, int SessionID, int zoneRangeStart, int zoneRangeEnd) {
            return base.Channel.GetSignalStrengthLevelByZoneRangeAsync(MAC, SessionID, zoneRangeStart, zoneRangeEnd);
        }
        
        public ShabakahRedir.TCServiceReference.GetZoneProgrammingCapabilityResult GetZoneProgrammingCapability(string MAC, int SessionID) {
            return base.Channel.GetZoneProgrammingCapability(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZoneProgrammingCapabilityResult> GetZoneProgrammingCapabilityAsync(string MAC, int SessionID) {
            return base.Channel.GetZoneProgrammingCapabilityAsync(MAC, SessionID);
        }
        
        public ShabakahRedir.TCServiceReference.GetEntryDelaysResult GetEntryDelays(string MAC, int SessionID) {
            return base.Channel.GetEntryDelays(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetEntryDelaysResult> GetEntryDelaysAsync(string MAC, int SessionID) {
            return base.Channel.GetEntryDelaysAsync(MAC, SessionID);
        }
        
        public ShabakahRedir.TCServiceReference.GetPanelSoftwareVersionResult GetPanelSoftwareVersion(string MAC, int SessionID) {
            return base.Channel.GetPanelSoftwareVersion(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetPanelSoftwareVersionResult> GetPanelSoftwareVersionAsync(string MAC, int SessionID) {
            return base.Channel.GetPanelSoftwareVersionAsync(MAC, SessionID);
        }
        
        public ShabakahRedir.TCServiceReference.GetCustomArmConfigResult GetCustomArmConfig(string MAC, int SessionID) {
            return base.Channel.GetCustomArmConfig(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetCustomArmConfigResult> GetCustomArmConfigAsync(string MAC, int SessionID) {
            return base.Channel.GetCustomArmConfigAsync(MAC, SessionID);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults SetCustomArmConfig(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eArmMode armMode, bool entryDelay, int[] byPassZones) {
            return base.Channel.SetCustomArmConfig(MAC, SessionID, armMode, entryDelay, byPassZones);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetCustomArmConfigAsync(string MAC, int SessionID, ShabakahRedir.TCServiceReference.eArmMode armMode, bool entryDelay, int[] byPassZones) {
            return base.Channel.SetCustomArmConfigAsync(MAC, SessionID, armMode, entryDelay, byPassZones);
        }
        
        public ShabakahRedir.TCServiceReference.ArmSystemResult ArmSystem(string MAC, int SessionID, string userCode, int area, ShabakahRedir.TCServiceReference.eArmType armtype, string AdditionalInfo, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubState> armAwayHome, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubStateModifier> armStay1or2, System.Nullable<bool> entryDelay, int[] zonesToBypass) {
            return base.Channel.ArmSystem(MAC, SessionID, userCode, area, armtype, AdditionalInfo, armAwayHome, armStay1or2, entryDelay, zonesToBypass);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.ArmSystemResult> ArmSystemAsync(string MAC, int SessionID, string userCode, int area, ShabakahRedir.TCServiceReference.eArmType armtype, string AdditionalInfo, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubState> armAwayHome, System.Nullable<ShabakahRedir.TCServiceReference.eArmSubStateModifier> armStay1or2, System.Nullable<bool> entryDelay, int[] zonesToBypass) {
            return base.Channel.ArmSystemAsync(MAC, SessionID, userCode, area, armtype, AdditionalInfo, armAwayHome, armStay1or2, entryDelay, zonesToBypass);
        }
        
        public ShabakahRedir.TCServiceReference.DisarmSystemResult DisarmSystem(string MAC, int SessionID, string userCode, int area, string AdditionalInfo) {
            return base.Channel.DisarmSystem(MAC, SessionID, userCode, area, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DisarmSystemResult> DisarmSystemAsync(string MAC, int SessionID, string userCode, int area, string AdditionalInfo) {
            return base.Channel.DisarmSystemAsync(MAC, SessionID, userCode, area, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetZonesListInStateResult GetZonesListInState(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo) {
            return base.Channel.GetZonesListInState(MAC, SessionID, PartitionNumber, ListIdentifierId, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZonesListInStateResult> GetZonesListInStateAsync(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo) {
            return base.Channel.GetZonesListInStateAsync(MAC, SessionID, PartitionNumber, ListIdentifierId, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetZoneListInStateWithConsoleInfoResult GetZoneListInStateWithConsoleInfo(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo) {
            return base.Channel.GetZoneListInStateWithConsoleInfo(MAC, SessionID, PartitionNumber, ListIdentifierId, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZoneListInStateWithConsoleInfoResult> GetZoneListInStateWithConsoleInfoAsync(string MAC, int SessionID, int PartitionNumber, ShabakahRedir.TCServiceReference.eZoneStatusIdentifier ListIdentifierId, string AdditionalInfo) {
            return base.Channel.GetZoneListInStateWithConsoleInfoAsync(MAC, SessionID, PartitionNumber, ListIdentifierId, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.PartitionState GetAreaStatusObject(string MAC, int SessionID, int Area, string AdditionalInfo) {
            return base.Channel.GetAreaStatusObject(MAC, SessionID, Area, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.PartitionState> GetAreaStatusObjectAsync(string MAC, int SessionID, int Area, string AdditionalInfo) {
            return base.Channel.GetAreaStatusObjectAsync(MAC, SessionID, Area, AdditionalInfo);
        }
        
        public string GetAreaStat(string MAC, int SessionID, int Area, string AdditionalInfo) {
            return base.Channel.GetAreaStat(MAC, SessionID, Area, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetAreaStatAsync(string MAC, int SessionID, int Area, string AdditionalInfo) {
            return base.Channel.GetAreaStatAsync(MAC, SessionID, Area, AdditionalInfo);
        }
        
        public string Bypass(string MAC, int SessionID, int Zone, string Password) {
            return base.Channel.Bypass(MAC, SessionID, Zone, Password);
        }
        
        public System.Threading.Tasks.Task<string> BypassAsync(string MAC, int SessionID, int Zone, string Password) {
            return base.Channel.BypassAsync(MAC, SessionID, Zone, Password);
        }
        
        public int OpenSession(string MAC, int ECP, int Devtype, string Alarmnetuser) {
            return base.Channel.OpenSession(MAC, ECP, Devtype, Alarmnetuser);
        }
        
        public System.Threading.Tasks.Task<int> OpenSessionAsync(string MAC, int ECP, int Devtype, string Alarmnetuser) {
            return base.Channel.OpenSessionAsync(MAC, ECP, Devtype, Alarmnetuser);
        }
        
        public int IsConnected(string MAC, int SessionID) {
            return base.Channel.IsConnected(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<int> IsConnectedAsync(string MAC, int SessionID) {
            return base.Channel.IsConnectedAsync(MAC, SessionID);
        }
        
        public string GetConnections() {
            return base.Channel.GetConnections();
        }
        
        public System.Threading.Tasks.Task<string> GetConnectionsAsync() {
            return base.Channel.GetConnectionsAsync();
        }
        
        public string GetLogFileLocation(string MAC) {
            return base.Channel.GetLogFileLocation(MAC);
        }
        
        public System.Threading.Tasks.Task<string> GetLogFileLocationAsync(string MAC) {
            return base.Channel.GetLogFileLocationAsync(MAC);
        }
        
        public bool Authenticate(string MAC, int SessionID, string Password) {
            return base.Channel.Authenticate(MAC, SessionID, Password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateAsync(string MAC, int SessionID, string Password) {
            return base.Channel.AuthenticateAsync(MAC, SessionID, Password);
        }
        
        public ShabakahRedir.TCServiceReference.ReadConsoleDisplayResult ReadConsoleDisplay(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.ReadConsoleDisplay(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.ReadConsoleDisplayResult> ReadConsoleDisplayAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.ReadConsoleDisplayAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public void CloseSession(string MAC, int SessionID, string Aarmnetuser) {
            base.Channel.CloseSession(MAC, SessionID, Aarmnetuser);
        }
        
        public System.Threading.Tasks.Task CloseSessionAsync(string MAC, int SessionID, string Aarmnetuser) {
            return base.Channel.CloseSessionAsync(MAC, SessionID, Aarmnetuser);
        }
        
        public ShabakahRedir.TCServiceReference.PanelToCommitInfoResult PanelToCommitChanges(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.PanelToCommitChanges(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.PanelToCommitInfoResult> PanelToCommitChangesAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.PanelToCommitChangesAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetSupportedZwaveFeaturesResult GetSupportedZwaveFeatures(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetSupportedZwaveFeatures(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSupportedZwaveFeaturesResult> GetSupportedZwaveFeaturesAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetSupportedZwaveFeaturesAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumberResult GetZwaveConfigSequenceNumber(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetZwaveConfigSequenceNumber(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZwaveConfigSequenceNumberResult> GetZwaveConfigSequenceNumberAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetZwaveConfigSequenceNumberAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetPanelLanguaageCapabilityResult GetPanelLanguageConfiguration(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetPanelLanguageConfiguration(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetPanelLanguaageCapabilityResult> GetPanelLanguageConfigurationAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetPanelLanguageConfigurationAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetArmingModesResult GetArmingModes(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetArmingModes(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetArmingModesResult> GetArmingModesAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetArmingModesAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public int GetNumberOfPartitions(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetNumberOfPartitions(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfPartitionsAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetNumberOfPartitionsAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public string GetInstaller(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetInstaller(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetInstallerAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetInstallerAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public string GetHardwareName(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetHardwareName(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetHardwareNameAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetHardwareNameAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public string GetVersion(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetVersion(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetVersionAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public int GetSequenceNumber(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetSequenceNumber(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> GetSequenceNumberAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetSequenceNumberAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults SetCommandInProgressToNone(string MAC, int SessionID) {
            return base.Channel.SetCommandInProgressToNone(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SetCommandInProgressToNoneAsync(string MAC, int SessionID) {
            return base.Channel.SetCommandInProgressToNoneAsync(MAC, SessionID);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults GetCommandInProgress(string MAC, int SessionID) {
            return base.Channel.GetCommandInProgress(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> GetCommandInProgressAsync(string MAC, int SessionID) {
            return base.Channel.GetCommandInProgressAsync(MAC, SessionID);
        }
        
        public int GetNumberOfZones(string MAC, int SessionID, int PartitionIndex) {
            return base.Channel.GetNumberOfZones(MAC, SessionID, PartitionIndex);
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfZonesAsync(string MAC, int SessionID, int PartitionIndex) {
            return base.Channel.GetNumberOfZonesAsync(MAC, SessionID, PartitionIndex);
        }
        
        public int GetHomeArea(string MAC, int SessionID) {
            return base.Channel.GetHomeArea(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetHomeAreaAsync(string MAC, int SessionID) {
            return base.Channel.GetHomeAreaAsync(MAC, SessionID);
        }
        
        public void SendKey(string MAC, int SessionID, char PressedKey) {
            base.Channel.SendKey(MAC, SessionID, PressedKey);
        }
        
        public System.Threading.Tasks.Task SendKeyAsync(string MAC, int SessionID, char PressedKey) {
            return base.Channel.SendKeyAsync(MAC, SessionID, PressedKey);
        }
        
        public bool SendMacro(string MAC, int SessionID, string macroSeq, string AdditionalInfo) {
            return base.Channel.SendMacro(MAC, SessionID, macroSeq, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<bool> SendMacroAsync(string MAC, int SessionID, string macroSeq, string AdditionalInfo) {
            return base.Channel.SendMacroAsync(MAC, SessionID, macroSeq, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.ImportZoneInfoResult ImportZoneInfo(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.ImportZoneInfo(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.ImportZoneInfoResult> ImportZoneInfoAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.ImportZoneInfoAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetZoneInformationResult GetZoneUnicode(string MAC, int SessionID, int PartitionIndex, int ZoneIndex, string AdditionalInfo) {
            return base.Channel.GetZoneUnicode(MAC, SessionID, PartitionIndex, ZoneIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZoneInformationResult> GetZoneUnicodeAsync(string MAC, int SessionID, int PartitionIndex, int ZoneIndex, string AdditionalInfo) {
            return base.Channel.GetZoneUnicodeAsync(MAC, SessionID, PartitionIndex, ZoneIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetSupportedChimesResult GetSupportedChimes(string MAC, int SessionID) {
            return base.Channel.GetSupportedChimes(MAC, SessionID);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSupportedChimesResult> GetSupportedChimesAsync(string MAC, int SessionID) {
            return base.Channel.GetSupportedChimesAsync(MAC, SessionID);
        }
        
        public string GetLastCommandState(string MAC) {
            return base.Channel.GetLastCommandState(MAC);
        }
        
        public System.Threading.Tasks.Task<string> GetLastCommandStateAsync(string MAC) {
            return base.Channel.GetLastCommandStateAsync(MAC);
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults SendPanic(string MAC, int SessionID, int area, ShabakahRedir.TCServiceReference.ePanicType[] panicTypesToSend, string userCode) {
            return base.Channel.SendPanic(MAC, SessionID, area, panicTypesToSend, userCode);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> SendPanicAsync(string MAC, int SessionID, int area, ShabakahRedir.TCServiceReference.ePanicType[] panicTypesToSend, string userCode) {
            return base.Channel.SendPanicAsync(MAC, SessionID, area, panicTypesToSend, userCode);
        }
        
        public ShabakahRedir.TCServiceReference.PanelFeatureSet2Result GetPanelFeatureSet2Info(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetPanelFeatureSet2Info(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.PanelFeatureSet2Result> GetPanelFeatureSet2InfoAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetPanelFeatureSet2InfoAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.TCServiceInstanceStatusResult GetCurrentTCServiceInstanceStatus() {
            return base.Channel.GetCurrentTCServiceInstanceStatus();
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.TCServiceInstanceStatusResult> GetCurrentTCServiceInstanceStatusAsync() {
            return base.Channel.GetCurrentTCServiceInstanceStatusAsync();
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults StartUpCurrentTCServiceInstance() {
            return base.Channel.StartUpCurrentTCServiceInstance();
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> StartUpCurrentTCServiceInstanceAsync() {
            return base.Channel.StartUpCurrentTCServiceInstanceAsync();
        }
        
        public ShabakahRedir.TCServiceReference.WebMethodResults ShutDownCurrentTCServiceInstance() {
            return base.Channel.ShutDownCurrentTCServiceInstance();
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.WebMethodResults> ShutDownCurrentTCServiceInstanceAsync() {
            return base.Channel.ShutDownCurrentTCServiceInstanceAsync();
        }
        
        public ShabakahRedir.TCServiceReference.SynchronizeSecurityPanelResult SynchronizeSecurityPanel(string MAC, int SessionID, string InstallerCode, string UserCode, string AdditionalInfo) {
            return base.Channel.SynchronizeSecurityPanel(MAC, SessionID, InstallerCode, UserCode, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SynchronizeSecurityPanelResult> SynchronizeSecurityPanelAsync(string MAC, int SessionID, string InstallerCode, string UserCode, string AdditionalInfo) {
            return base.Channel.SynchronizeSecurityPanelAsync(MAC, SessionID, InstallerCode, UserCode, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetAutomationNetworkStatusResult GetAutomationNetworkStatus(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetAutomationNetworkStatus(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAutomationNetworkStatusResult> GetAutomationNetworkStatusAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetAutomationNetworkStatusAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetNumberOfAutomationDeviceInStateResult GetNumberOfAutomationDevicesInState(string MAC, int SessionID, int DeviceState, string AdditionalInfo) {
            return base.Channel.GetNumberOfAutomationDevicesInState(MAC, SessionID, DeviceState, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetNumberOfAutomationDeviceInStateResult> GetNumberOfAutomationDevicesInStateAsync(string MAC, int SessionID, int DeviceState, string AdditionalInfo) {
            return base.Channel.GetNumberOfAutomationDevicesInStateAsync(MAC, SessionID, DeviceState, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetAutomationDeviceListResult GetAutomationDevicesListInState(string MAC, int SessionID, int DeviceState, string AdditionalInfo) {
            return base.Channel.GetAutomationDevicesListInState(MAC, SessionID, DeviceState, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAutomationDeviceListResult> GetAutomationDevicesListInStateAsync(string MAC, int SessionID, int DeviceState, string AdditionalInfo) {
            return base.Channel.GetAutomationDevicesListInStateAsync(MAC, SessionID, DeviceState, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetAllAutomationDeviceStateResult GetAllAutomationDeviceState(string MAC, int SessionID, int StartIndex, int EndIndex, string AdditionalInfo) {
            return base.Channel.GetAllAutomationDeviceState(MAC, SessionID, StartIndex, EndIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAllAutomationDeviceStateResult> GetAllAutomationDeviceStateAsync(string MAC, int SessionID, int StartIndex, int EndIndex, string AdditionalInfo) {
            return base.Channel.GetAllAutomationDeviceStateAsync(MAC, SessionID, StartIndex, EndIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetGeneralSwitchInfoResult GetGeneralSwitchInfo(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetGeneralSwitchInfo(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetGeneralSwitchInfoResult> GetGeneralSwitchInfoAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetGeneralSwitchInfoAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetZWaveSwitchInfoResult GetIndividualSwitchInfo(string MAC, int SessionID, int SwitchInstance, string AdditionalInfo) {
            return base.Channel.GetIndividualSwitchInfo(MAC, SessionID, SwitchInstance, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetZWaveSwitchInfoResult> GetIndividualSwitchInfoAsync(string MAC, int SessionID, int SwitchInstance, string AdditionalInfo) {
            return base.Channel.GetIndividualSwitchInfoAsync(MAC, SessionID, SwitchInstance, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetSwitchCurrentStateResult GetSwitchCurrentState(string MAC, int SessionID, int[] SwitchIndexList, string AdditionalInfo) {
            return base.Channel.GetSwitchCurrentState(MAC, SessionID, SwitchIndexList, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSwitchCurrentStateResult> GetSwitchCurrentStateAsync(string MAC, int SessionID, int[] SwitchIndexList, string AdditionalInfo) {
            return base.Channel.GetSwitchCurrentStateAsync(MAC, SessionID, SwitchIndexList, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetSwitchStateResult SetSwitchState(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.SwitchStateInfo[] SwitchStateInfo, string AdditionalInfo) {
            return base.Channel.SetSwitchState(MAC, SessionID, AuthorizingCode, SwitchStateInfo, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetSwitchStateResult> SetSwitchStateAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.SwitchStateInfo[] SwitchStateInfo, string AdditionalInfo) {
            return base.Channel.SetSwitchStateAsync(MAC, SessionID, AuthorizingCode, SwitchStateInfo, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.RenameSwitchResult RenameSwitch(string MAC, int SessionID, string AuthorizingCode, int SwitchIndex, string SwitchName, string AdditionalInfo) {
            return base.Channel.RenameSwitch(MAC, SessionID, AuthorizingCode, SwitchIndex, SwitchName, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RenameSwitchResult> RenameSwitchAsync(string MAC, int SessionID, string AuthorizingCode, int SwitchIndex, string SwitchName, string AdditionalInfo) {
            return base.Channel.RenameSwitchAsync(MAC, SessionID, AuthorizingCode, SwitchIndex, SwitchName, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetGeneralLockInfoResult GetGeneralLockInfo(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetGeneralLockInfo(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetGeneralLockInfoResult> GetGeneralLockInfoAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetGeneralLockInfoAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetIndividualLockInfoResult GetIndividualLockInfo(string MAC, int SessionID, int LockInstance, string AdditionalInfo) {
            return base.Channel.GetIndividualLockInfo(MAC, SessionID, LockInstance, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetIndividualLockInfoResult> GetIndividualLockInfoAsync(string MAC, int SessionID, int LockInstance, string AdditionalInfo) {
            return base.Channel.GetIndividualLockInfoAsync(MAC, SessionID, LockInstance, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetLockCurrentStateResult GetLockCurrentState(string MAC, int SessionID, int[] LockIndexList, string AdditionalInfo) {
            return base.Channel.GetLockCurrentState(MAC, SessionID, LockIndexList, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetLockCurrentStateResult> GetLockCurrentStateAsync(string MAC, int SessionID, int[] LockIndexList, string AdditionalInfo) {
            return base.Channel.GetLockCurrentStateAsync(MAC, SessionID, LockIndexList, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetLockStateResult SetLockState(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.LockStateInfo[] LockStateInfo, string AdditionalInfo) {
            return base.Channel.SetLockState(MAC, SessionID, AuthorizingCode, LockStateInfo, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetLockStateResult> SetLockStateAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.LockStateInfo[] LockStateInfo, string AdditionalInfo) {
            return base.Channel.SetLockStateAsync(MAC, SessionID, AuthorizingCode, LockStateInfo, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.RenameLockResult RenameLock(string MAC, int SessionID, string AuthorizingCode, int LockIndex, string LockName, string AdditionalInfo) {
            return base.Channel.RenameLock(MAC, SessionID, AuthorizingCode, LockIndex, LockName, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RenameLockResult> RenameLockAsync(string MAC, int SessionID, string AuthorizingCode, int LockIndex, string LockName, string AdditionalInfo) {
            return base.Channel.RenameLockAsync(MAC, SessionID, AuthorizingCode, LockIndex, LockName, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetGeneralThermostatInfoResult GetGeneralThermostatInfo(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetGeneralThermostatInfo(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetGeneralThermostatInfoResult> GetGeneralThermostatInfoAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetGeneralThermostatInfoAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetIndividualThermostatInfoResult GetIndividualThermostatInfo(string MAC, int SessionID, int ThermostatInstance, string AdditionalInfo) {
            return base.Channel.GetIndividualThermostatInfo(MAC, SessionID, ThermostatInstance, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetIndividualThermostatInfoResult> GetIndividualThermostatInfoAsync(string MAC, int SessionID, int ThermostatInstance, string AdditionalInfo) {
            return base.Channel.GetIndividualThermostatInfoAsync(MAC, SessionID, ThermostatInstance, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetThermostatCurrentStateResult GetThermostatCurrentState(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo) {
            return base.Channel.GetThermostatCurrentState(MAC, SessionID, ThermostatIndexList, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetThermostatCurrentStateResult> GetThermostatCurrentStateAsync(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo) {
            return base.Channel.GetThermostatCurrentStateAsync(MAC, SessionID, ThermostatIndexList, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetThermostatCurrentStateExResult GetThermostatCurrentStateEx(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo) {
            return base.Channel.GetThermostatCurrentStateEx(MAC, SessionID, ThermostatIndexList, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetThermostatCurrentStateExResult> GetThermostatCurrentStateExAsync(string MAC, int SessionID, int[] ThermostatIndexList, string AdditionalInfo) {
            return base.Channel.GetThermostatCurrentStateExAsync(MAC, SessionID, ThermostatIndexList, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetThermostatStateResult SetThermostatState(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Thermostat[] ThermostatInformation, string AdditionalInfo) {
            return base.Channel.SetThermostatState(MAC, SessionID, AuthorizingCode, ThermostatInformation, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetThermostatStateResult> SetThermostatStateAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Thermostat[] ThermostatInformation, string AdditionalInfo) {
            return base.Channel.SetThermostatStateAsync(MAC, SessionID, AuthorizingCode, ThermostatInformation, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.RenameThermostatResult RenameThermostat(string MAC, int SessionID, string AuthorizingCode, int ThermostatIndex, string ThermostatName, string AdditionalInfo) {
            return base.Channel.RenameThermostat(MAC, SessionID, AuthorizingCode, ThermostatIndex, ThermostatName, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RenameThermostatResult> RenameThermostatAsync(string MAC, int SessionID, string AuthorizingCode, int ThermostatIndex, string ThermostatName, string AdditionalInfo) {
            return base.Channel.RenameThermostatAsync(MAC, SessionID, AuthorizingCode, ThermostatIndex, ThermostatName, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetSceneConfigurationResult GetSceneConfiguration(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetSceneConfiguration(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSceneConfigurationResult> GetSceneConfigurationAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetSceneConfigurationAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetSceneResult SetScene(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Scene SceneInformation, string AdditionalInfo) {
            return base.Channel.SetScene(MAC, SessionID, AuthorizingCode, SceneInformation, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetSceneResult> SetSceneAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Scene SceneInformation, string AdditionalInfo) {
            return base.Channel.SetSceneAsync(MAC, SessionID, AuthorizingCode, SceneInformation, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetSceneResult GetScene(string MAC, int SessionID, int SceneInstance, string AdditionalInfo) {
            return base.Channel.GetScene(MAC, SessionID, SceneInstance, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSceneResult> GetSceneAsync(string MAC, int SessionID, int SceneInstance, string AdditionalInfo) {
            return base.Channel.GetSceneAsync(MAC, SessionID, SceneInstance, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.RunSceneResult RunScene(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo) {
            return base.Channel.RunScene(MAC, SessionID, AuthorizingCode, SceneIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.RunSceneResult> RunSceneAsync(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo) {
            return base.Channel.RunSceneAsync(MAC, SessionID, AuthorizingCode, SceneIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.DeleteSceneResult DeleteScene(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo) {
            return base.Channel.DeleteScene(MAC, SessionID, AuthorizingCode, SceneIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteSceneResult> DeleteSceneAsync(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string AdditionalInfo) {
            return base.Channel.DeleteSceneAsync(MAC, SessionID, AuthorizingCode, SceneIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetSceneNameResult GetSceneName(string MAC, int SessionID, int SceneIndex, string AdditionalInfo) {
            return base.Channel.GetSceneName(MAC, SessionID, SceneIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetSceneNameResult> GetSceneNameAsync(string MAC, int SessionID, int SceneIndex, string AdditionalInfo) {
            return base.Channel.GetSceneNameAsync(MAC, SessionID, SceneIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetSceneNameResult SetSceneName(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string SceneName, string AdditionalInfo) {
            return base.Channel.SetSceneName(MAC, SessionID, AuthorizingCode, SceneIndex, SceneName, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetSceneNameResult> SetSceneNameAsync(string MAC, int SessionID, string AuthorizingCode, int SceneIndex, string SceneName, string AdditionalInfo) {
            return base.Channel.SetSceneNameAsync(MAC, SessionID, AuthorizingCode, SceneIndex, SceneName, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetRuleConfigurationResult GetRuleConfiguration(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetRuleConfiguration(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetRuleConfigurationResult> GetRuleConfigurationAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetRuleConfigurationAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.DeleteRuleResult DeleteRule(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string AdditionalInfo) {
            return base.Channel.DeleteRule(MAC, SessionID, AuthorizingCode, RuleIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteRuleResult> DeleteRuleAsync(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string AdditionalInfo) {
            return base.Channel.DeleteRuleAsync(MAC, SessionID, AuthorizingCode, RuleIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetRuleInformationResult GetRuleInformation(string MAC, int SessionID, int RuleInstance, string AdditionalInfo) {
            return base.Channel.GetRuleInformation(MAC, SessionID, RuleInstance, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetRuleInformationResult> GetRuleInformationAsync(string MAC, int SessionID, int RuleInstance, string AdditionalInfo) {
            return base.Channel.GetRuleInformationAsync(MAC, SessionID, RuleInstance, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetRuleResult SetRule(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.EventAction RuleInformation, string AdditionalInfo) {
            return base.Channel.SetRule(MAC, SessionID, AuthorizingCode, RuleInformation, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetRuleResult> SetRuleAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.EventAction RuleInformation, string AdditionalInfo) {
            return base.Channel.SetRuleAsync(MAC, SessionID, AuthorizingCode, RuleInformation, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetRuleNameResult GetRuleName(string MAC, int SessionID, int RuleIndex, string AdditionalInfo) {
            return base.Channel.GetRuleName(MAC, SessionID, RuleIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetRuleNameResult> GetRuleNameAsync(string MAC, int SessionID, int RuleIndex, string AdditionalInfo) {
            return base.Channel.GetRuleNameAsync(MAC, SessionID, RuleIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetRuleNameResult SetRuleName(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string RuleName, string AdditionalInfo) {
            return base.Channel.SetRuleName(MAC, SessionID, AuthorizingCode, RuleIndex, RuleName, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetRuleNameResult> SetRuleNameAsync(string MAC, int SessionID, string AuthorizingCode, int RuleIndex, string RuleName, string AdditionalInfo) {
            return base.Channel.SetRuleNameAsync(MAC, SessionID, AuthorizingCode, RuleIndex, RuleName, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetScheduleConfigurationResult GetScheduleConfiguration(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetScheduleConfiguration(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetScheduleConfigurationResult> GetScheduleConfigurationAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetScheduleConfigurationAsync(MAC, SessionID, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.DeleteScheduleResult DeleteSchedule(string MAC, int SessionID, string AuthorizingCode, int ScheduleIndex, string AdditionalInfo) {
            return base.Channel.DeleteSchedule(MAC, SessionID, AuthorizingCode, ScheduleIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteScheduleResult> DeleteScheduleAsync(string MAC, int SessionID, string AuthorizingCode, int ScheduleIndex, string AdditionalInfo) {
            return base.Channel.DeleteScheduleAsync(MAC, SessionID, AuthorizingCode, ScheduleIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetScheduleInformationResult GetScheduleInformation(string MAC, int SessionID, int ScheduleInstance, string AdditionalInfo) {
            return base.Channel.GetScheduleInformation(MAC, SessionID, ScheduleInstance, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetScheduleInformationResult> GetScheduleInformationAsync(string MAC, int SessionID, int ScheduleInstance, string AdditionalInfo) {
            return base.Channel.GetScheduleInformationAsync(MAC, SessionID, ScheduleInstance, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetScheduleResult SetSchedule(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Schedule ScheduleInformation, string AdditionalInfo) {
            return base.Channel.SetSchedule(MAC, SessionID, AuthorizingCode, ScheduleInformation, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetScheduleResult> SetScheduleAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.Schedule ScheduleInformation, string AdditionalInfo) {
            return base.Channel.SetScheduleAsync(MAC, SessionID, AuthorizingCode, ScheduleInformation, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetTemperatureScheduleResult GetTemperatureSchedule(string MAC, int SessionID, int ThermostatIndex, string AdditionalInfo) {
            return base.Channel.GetTemperatureSchedule(MAC, SessionID, ThermostatIndex, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetTemperatureScheduleResult> GetTemperatureScheduleAsync(string MAC, int SessionID, int ThermostatIndex, string AdditionalInfo) {
            return base.Channel.GetTemperatureScheduleAsync(MAC, SessionID, ThermostatIndex, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SetTemperatureScheduleResult SetTemperatureSchedule(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TemperatureSchedule TemperatureSchedule, string AdditionalInfo) {
            return base.Channel.SetTemperatureSchedule(MAC, SessionID, AuthorizingCode, TemperatureSchedule, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SetTemperatureScheduleResult> SetTemperatureScheduleAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.TemperatureSchedule TemperatureSchedule, string AdditionalInfo) {
            return base.Channel.SetTemperatureScheduleAsync(MAC, SessionID, AuthorizingCode, TemperatureSchedule, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetUserBySlotResult GetUserBySlotNumber(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, int PartitionNumber, string AdditionalInfo) {
            return base.Channel.GetUserBySlotNumber(MAC, SessionID, AuthorizingCode, SlotNumber, PartitionNumber, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetUserBySlotResult> GetUserBySlotNumberAsync(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, int PartitionNumber, string AdditionalInfo) {
            return base.Channel.GetUserBySlotNumberAsync(MAC, SessionID, AuthorizingCode, SlotNumber, PartitionNumber, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SaveUserResult SaveUserInformation(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo) {
            return base.Channel.SaveUserInformation(MAC, SessionID, AuthorizingCode, PanelUser, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SaveUserResult> SaveUserInformationAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo) {
            return base.Channel.SaveUserInformationAsync(MAC, SessionID, AuthorizingCode, PanelUser, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.SaveUserResult SaveUserInformationEx(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo) {
            return base.Channel.SaveUserInformationEx(MAC, SessionID, AuthorizingCode, PanelUser, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.SaveUserResult> SaveUserInformationExAsync(string MAC, int SessionID, string AuthorizingCode, ShabakahRedir.TCServiceReference.PanelUser PanelUser, string AdditionalInfo) {
            return base.Channel.SaveUserInformationExAsync(MAC, SessionID, AuthorizingCode, PanelUser, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.DeleteUserResult DeleteUserBySlotNumber(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, string AdditionalInfo) {
            return base.Channel.DeleteUserBySlotNumber(MAC, SessionID, AuthorizingCode, SlotNumber, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.DeleteUserResult> DeleteUserBySlotNumberAsync(string MAC, int SessionID, string AuthorizingCode, int SlotNumber, string AdditionalInfo) {
            return base.Channel.DeleteUserBySlotNumberAsync(MAC, SessionID, AuthorizingCode, SlotNumber, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetUserSlotRangeResult GetUserSlotRange(string MAC, int SessionID, string AuthorizingCode, string AdditionalInfo) {
            return base.Channel.GetUserSlotRange(MAC, SessionID, AuthorizingCode, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetUserSlotRangeResult> GetUserSlotRangeAsync(string MAC, int SessionID, string AuthorizingCode, string AdditionalInfo) {
            return base.Channel.GetUserSlotRangeAsync(MAC, SessionID, AuthorizingCode, AdditionalInfo);
        }
        
        public ShabakahRedir.TCServiceReference.GetAuthorityLevelConfigurationResult GetAuthorityLevelConfiguration(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetAuthorityLevelConfiguration(MAC, SessionID, AdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<ShabakahRedir.TCServiceReference.GetAuthorityLevelConfigurationResult> GetAuthorityLevelConfigurationAsync(string MAC, int SessionID, string AdditionalInfo) {
            return base.Channel.GetAuthorityLevelConfigurationAsync(MAC, SessionID, AdditionalInfo);
        }
    }
}
